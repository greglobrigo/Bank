{"version":3,"sources":["components/lib/helpers.js","components/Layout/components.js","assets/cc.svg","assets/phone.svg","assets/revenue.svg","assets/security.svg","assets/feedback.svg","components/Home/CardComponent.js","components/Home/index.js","components/Users/component.js","components/Users/ButtonComponent.js","components/Users/TableComponent.js","components/Users/InputComponent.js","components/Users/ModalComponent.js","components/Users/ModalDetailsComponent.js","components/Users/index.js","components/Dashboard/Withdrawals/hooks.js","components/Dashboard/Withdrawals/index.js","components/Dashboard/Deposits/hooks.js","components/Dashboard/Deposits/index.js","components/Dashboard/Transfers/hooks.js","components/Dashboard/Transfers/index.js","assets/blg.png","assets/blank_image.png","components/Layout/LinkComponent.js","components/Layout/LoginComponent.js","components/Layout/UserSectionComponent.js","components/Transaction/ButtonComponent.js","components/Transaction/InputComponent.js","components/Transaction/hooks.js","components/Transaction/index.js","components/Layout/index.js","App.js","reportWebVitals.js","index.js","components/Users/useLocalStorage.js","components/Layout/useSessionStorage.js","components/Global/AppContext.js","components/Profile/index.js","components/Users/hooks.js","components/Layout/hooks.js"],"names":["convertToMoney","value","Intl","NumberFormat","style","currency","format","OutlineHome","AiOutlineHome","OutlineDashboard","AiOutlineDashboard","UsersIcon","FiUsers","LogIn","BiLogIn","TransactionIcon","GrTransaction","BiCalculator","CardComponent","svg","setSelected","isAdmin","Link","cardTitle","cardText","item","up","className","data","width","height","to","onClick","Index","cc","phone","revenue","security","feedback","PersonPlus","BsPersonPlus","FillDelete","AiFillDelete","ContactInfo","GrContactInfo","ArrowSortedDownIcon","RiErrorWarningLine","TiArrowSortedDown","ArrowSortedUpIcon","TiArrowSortedUp","Search","AiOutlineSearch","ButtonComponent","btnClass","dbsToggle","dbsTarget","dbsDismiss","handleFunction","iconName","ariaLabel","btnDescription","resetTransaction","type","TableComponent","setCurrentSelectedData","handleDeleteUser","users","insertUserData","loadDummyData","searchHandler","deleteDummyAccounts","handleGenerateAccountNo","searchTerm","sortByAccountNumber","sortByFullName","sortByAddress","sortByMobileNo","sortByEmail","sortByCurrentBalance","isOrdered","setShow","delAccount","setDelAccount","useState","deleteUser","setDeleteUser","pauseOnFocusLoss","limit","Modal","show","Body","Footer","Button","variant","placeholder","onChange","backgroundColor","border","borderRadius","borderLeft","size","cursor","scope","accountNumber","fullName","address","mobileNo","email","balance","length","map","index","duration","account_no","first_name","last_name","mobile_no","colSpan","InputComponent","inputType","inputClass","inputID","placeholderTitle","handleOnChange","inputValue","label","isReadOnly","isPattern","errorMessage","isError","id","readOnly","e","target","pattern","title","ModalComponent","accountNo","setUserName","userName","setPassword","password","retypePassword","setRetypePassword","setFirstName","firstName","setLastName","lastName","setAddress","setMobileNo","setEmail","setBalance","handleSaveUsers","errorState","setErrorState","modalShow","closeModalComponent","resetUserInput","centered","backdrop","keyboard","dialogClassName","Header","Title","display","flexDirection","onSubmit","noValidate","username","usernameAlreadyExists","usernameCantContainSpace","passwordsDoNotMatch","firstNameCantStartWithNumber","lastNameCantStartWithNumber","isMobileNo","invalidEmailFormat","ModalForDetailsComponent","currentSelectedData","setAmountToWithdraw","amountToWithdraw","handleWithdraw","setAmountToDeposit","amountToDeposit","handleDeposit","setTransferTo","setAmountToTransfer","transferTo","amountToTransfer","handleTransfer","modalDetailsAlert","marginBottom","insufficientBalance","enterAnAmountToWithdraw","amountEnteredIsNegativeWithdraw","enterAnAmountToDeposit","amountEnteredIsNegativeDeposit","isLabel","amountEnteredIsNegative","insufficientBalanceTransfer","enterAnAmountToTransfer","sameAccountNumber","accountNumberNotValidTransfer","accountNumberCannotBeBlank","useHooks","transferMessage","searchResults","ModalDetailsComponent","useLocalStorage","withdrawalHistories","setWithdrawalHistories","date","withdrawnAmount","currentBalance","setIsOrdered","toastNotify","str","position","colored","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","warning","sort","a","b","sortByDate","regex","date1","parseInt","currentDatenTime","slice","split","filter","num","includes","join","date2","nameA","toUpperCase","nameB","sortByWithdrawAmount","latestWithdrawnAmount","loginAccount","isUser","filteredHistory","user","down","depositHistories","setDepositHistories","depositAmount","sortByDepositAmount","latestDepositAmount","transfersHistories","setTransfersHistories","latestTransferTo","latestTransferAmount","sortByTransferredTo","sortByTransferredAmount","LinkComponent","selected","handleSelectedMenu","Icon","path","description","hasSpan","LoginModalComponent","setModalShow","usernameInput","setUsernameInput","passwordInput","setPasswordInput","handleCheckUser","passwordState","handleShowPassword","handleHidePassword","src","bankLogo","alt","class","onMouseDown","onMouseUp","UserSectionComponent","handleLogout","defaultProfPic","zIndex","href","thumbnail_url","useContext","AppContext","matchesXL","useMediaQuery","setUsers","useSessionStorage","setAccountNo","setTransferMessage","withdrawMessage","setwithdrawMessage","depositMessage","setDepositMessage","successful","successfulDeposit","successfulTransfer","setModalDetailsAlert","userSelected","find","handleHistories","action","newHistory","Date","toLocaleTimeString","year","month","day","hour","minute","toUser","toUserCurrentBalance","transferAmount","setLoginAccount","admin","setAdmin","historiesSelected","matchesMD","styled","pointerEvents","Navbar","bg","expand","Container","Brand","Toggle","Collapse","Nav","NavDropdown","Item","Divider","exact","component","HomeComponent","Home","UsersComponent","Users","TransactionComponent","Transaction","Withdrawals","Deposits","Transfers","Profile","App","Layout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","key","initialValue","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","setItem","stringify","sessionStorage","React","createContext","AppProvider","props","state","func","Provider","children","oldPassword","setOldPassword","newPassword","setNewPassword","setPasswordState","bool","role","tabIndex","enPassword","Buffer","from","toString","enPasswordNewPassword","enPasswordRetypePassword","findLoginAccount","findLoginAccountUsers","alert","handleSaveNewPassword","setLoadDummyData","setSearchTerm","setSearchResults","checkDummyData","userAccounts","some","val","minutes","getMinutes","substr","hours","getHours","getMonth","getFullYear","Math","floor","random","preventDefault","lowerCasedUserName","toLowerCase","newUser","isNaN","substring","validation","findIndex","splice","newUserList","Object","values","dummyAccounts","newUsers","emailA","emailB","setIsAdmin","setIsUser","loginFilterAdmin","obj","loginFilterUser"],"mappings":"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","file":"static/js/main.48ac238d.chunk.js","sourcesContent":["export const convertToMoney = (value) => new Intl.NumberFormat(\"en-PH\", {\r\n    style: \"currency\",\r\n    currency: 'PHP',\r\n}).format(`${value}`);","import { AiOutlineHome, AiOutlineDashboard } from 'react-icons/ai';\r\nimport {FiUsers} from 'react-icons/fi';\r\nimport {BiLogIn} from 'react-icons/bi';\r\nimport {GrTransaction} from 'react-icons/gr';\r\nimport {BiCalculator} from 'react-icons/bi'\r\n\r\n\r\nexport const OutlineHome = AiOutlineHome;\r\nexport const OutlineDashboard = AiOutlineDashboard;\r\nexport const UsersIcon = FiUsers;\r\nexport const LogIn = BiLogIn;\r\nexport const TransactionIcon = GrTransaction;\r\nexport const Calculator = BiCalculator\r\n\r\n","export default __webpack_public_path__ + \"static/media/cc.9f881e7c.svg\";","export default __webpack_public_path__ + \"static/media/phone.5543a1cd.svg\";","export default __webpack_public_path__ + \"static/media/revenue.30dca1df.svg\";","export default __webpack_public_path__ + \"static/media/security.63a4c785.svg\";","export default __webpack_public_path__ + \"static/media/feedback.4ea6647c.svg\";","import React from 'react'\r\nimport Zoom  from 'react-reveal/Zoom';\r\n\r\n\r\nconst CardComponent = ({svg, setSelected, isAdmin, Link, cardTitle, cardText, item}) => {\r\n    return ( \r\n       \r\n        <Zoom  up>\r\n        <div className={`box-item ${item}`}>\r\n        <div className=\"card\">\r\n        <object className=\"svg\" data={svg} width=\"auto\" height=\"250\"> </object>\r\n        <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{cardTitle}</h5>        \r\n        <span className=\"card-span\">\r\n        <p className=\"card-text\">{cardText}</p>\r\n        {Link && <Link\r\n        to={isAdmin ? \"/users\" : \"/transactions\"}>\r\n        <button onClick={()=>setSelected(isAdmin ? 4 : 5)} className=\"btn btn-primary\">Get started!</button>\r\n        </Link>}\r\n        </span>        \r\n        </div>\r\n        </div>     \r\n        </div>\r\n        </Zoom>\r\n            \r\n    )\r\n}\r\n\r\nexport default CardComponent\r\n","import \"./style.css\"\r\nimport cc from \"../../assets/cc.svg\"\r\nimport phone from \"../../assets/phone.svg\"\r\nimport revenue from \"../../assets/revenue.svg\"\r\nimport security from \"../../assets/security.svg\"\r\nimport feedback from \"../../assets/feedback.svg\"\r\nimport { Link } from \"react-router-dom\";\r\nimport CardComponent from \"./CardComponent\"\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\nconst Index = ({setSelected, isAdmin}) => {\r\n    \r\n    return (\r\n      <>    \r\n    <div className=\"card-container\">\r\n    \r\n        <CardComponent\r\n        svg={cc}\r\n        setSelected={setSelected}\r\n        isAdmin={isAdmin}\r\n        Link={Link}\r\n        cardTitle={\"Open and manage accounts with ease.\"} \r\n        cardText={\"No need to drop by a branch.\"}\r\n        item={\"item1\"}  \r\n       />      \r\n\r\n        <CardComponent\r\n        svg={phone}                        \r\n        cardTitle={\"Enjoy real-time and hassle-free transfers\"} \r\n        cardText={\"Transfer money to other banks via Instapay.\"}  \r\n        item={\"item2\"}  \r\n        />     \r\n\r\n        <CardComponent\r\n        svg={revenue}                        \r\n        cardTitle={\"Stash away funds for your passions\"} \r\n        cardText={\"Easily open your second savings account via our web portal.\"}  \r\n        item={\"item3\"}\r\n        />\r\n\r\n        <CardComponent\r\n        svg={security}\r\n        cardTitle={\"Relax and know your money is safe.\"} \r\n        cardText={\"Your account is safe with our world class security measures.\"}  \r\n        item={\"item4\"}\r\n        /> \r\n\r\n        <CardComponent\r\n        svg={feedback}\r\n        cardTitle={\"We're always ready to listen\"} \r\n        cardText={\"Let us know what you think!\"}  \r\n        item={\"item5\"}\r\n        />  \r\n\r\n    </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Index\r\n","import {BsPersonPlus} from 'react-icons/bs';\r\nimport {AiFillDelete, AiOutlineSearch} from 'react-icons/ai';\r\nimport {GrContactInfo} from 'react-icons/gr';\r\nimport{RiErrorWarningLine} from 'react-icons/ri';\r\nimport {TiArrowSortedDown, TiArrowSortedUp} from 'react-icons/ti'\r\n\r\n\r\nexport const PersonPlus = BsPersonPlus;\r\nexport const FillDelete = AiFillDelete;\r\nexport const ContactInfo = GrContactInfo;\r\nexport const ErrorWarningLine = RiErrorWarningLine;\r\nexport const ArrowSortedDownIcon = TiArrowSortedDown;\r\nexport const ArrowSortedUpIcon = TiArrowSortedUp;\r\nexport const Search = AiOutlineSearch","import React from 'react'\r\n\r\nconst ButtonComponent = ({btnClass, dbsToggle, dbsTarget, dbsDismiss, handleFunction, iconName, ariaLabel, btnDescription, resetTransaction, style}) => {\r\n    \r\n    return (\r\n        <>\r\n            <button type=\"button\" className={btnClass} data-bs-dismiss={dbsDismiss} data-bs-toggle={dbsToggle} data-bs-target={dbsTarget} onClick={resetTransaction? resetTransaction : handleFunction} aria-label={ariaLabel}> {iconName ? iconName : null} {btnDescription}</button>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ButtonComponent","import React, {useState} from \"react\";\r\nimport {FillDelete, Search, ContactInfo, PersonPlus, ArrowSortedDownIcon, ArrowSortedUpIcon} from \"./component\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Fade  from 'react-reveal/Fade'\r\nimport ButtonComponent from \"./ButtonComponent\";\r\nimport \"./style.css\";\r\nimport {Modal, Button} from 'react-bootstrap'\r\n\r\nconst TableComponent = ({\r\n  setCurrentSelectedData,\r\n  handleDeleteUser,\r\n  users,\r\n  insertUserData,\r\n  loadDummyData,\r\n  searchHandler,\r\n  deleteDummyAccounts,\r\n  handleGenerateAccountNo,\r\n  searchTerm,\r\n  sortByAccountNumber,\r\n  sortByFullName,  \r\n  sortByAddress,\r\n  sortByMobileNo,\r\n  sortByEmail,\r\n  sortByCurrentBalance,\r\n  convertToMoney,\r\n  isOrdered,  \r\n  setShow,\r\n  delAccount,\r\n  setDelAccount  \r\n}) => {\r\n\r\n  const [deleteUser, setDeleteUser] = useState(false)\r\n \r\n\r\n  return (\r\n    <>        \r\n      <ToastContainer\r\n      pauseOnFocusLoss={false}   \r\n      limit={8}     \r\n      />    \r\n\r\n      <Modal\r\n      show={deleteUser}>  \r\n      <Modal.Body>\r\n       <p>Are you sure you want to delete this user?</p>\r\n       </Modal.Body>\r\n       <Modal.Footer>\r\n       <Button onClick={()=>setDeleteUser(false)} variant=\"secondary\">No</Button>\r\n       <Button onClick={()=>{handleDeleteUser(delAccount); setDeleteUser(false)}} variant=\"primary\">Yes</Button>\r\n       </Modal.Footer>\r\n       </Modal>  \r\n                      \r\n      <div className=\"btns-n-search\">  \r\n        <div className=\"add-client-btns\">\r\n          <ButtonComponent\r\n            handleFunction={handleGenerateAccountNo}\r\n            iconName={<PersonPlus />}\r\n            btnDescription={\" Add Client\"}\r\n            btnClass={\"btn btn-primary user-btn\"}\r\n            dbsToggle={\"modal\"}\r\n            dbsTarget={\"#exampleModal\"}\r\n          />\r\n          <ButtonComponent\r\n            handleFunction={insertUserData}\r\n            btnDescription={\"Load Data\"}\r\n            btnClass={\r\n              loadDummyData\r\n                ? \"btn btn-secondary user-btn\"\r\n                : \"btn btn-primary user-btn\"\r\n            }\r\n          />\r\n          <ButtonComponent\r\n            handleFunction={deleteDummyAccounts}\r\n            btnDescription={\"Delete Data\"}\r\n            btnClass={\r\n              loadDummyData\r\n                ? \"btn btn-primary user-btn\"\r\n                : \"btn btn-secondary user-btn\"\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"d-flex user-input\">           \r\n          <input\r\n            className=\"form-control\"\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n            onChange={searchHandler}\r\n            value={searchTerm}\r\n          />\r\n           <div style={{backgroundColor: \"white\", border: \"1px solid #ced4da\", borderRadius: \"0.25rem\", borderLeft: \"none\"}}>\r\n            <Search size={40}/>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"table-container\">\r\n        <table className=\"table\">\r\n          <thead className=\"table-header\">\r\n            <tr>\r\n              <th style={{cursor: \"pointer\"}} onClick={() => sortByAccountNumber()} scope=\"col\">\r\n                Acct # {isOrdered.accountNumber ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n              </th>\r\n              <th style={{cursor: \"pointer\"}} onClick={() => sortByFullName()} scope=\"col\">\r\n                Full Name {isOrdered.fullName ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n              </th>              \r\n              <th style={{cursor: \"pointer\"}} onClick={() => sortByAddress()} scope=\"col\">\r\n                Address {isOrdered.address ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n              </th>\r\n              <th style={{cursor: \"pointer\"}} onClick={() => sortByMobileNo()} scope=\"col\">\r\n              Phone No. {isOrdered.mobileNo ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n              </th>\r\n              <th style={{cursor: \"pointer\"}} onClick={() => sortByEmail()} scope=\"col\">\r\n              Email {isOrdered.email ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n              </th>\r\n              <th style={{cursor: \"pointer\"}} onClick={() => sortByCurrentBalance()} scope=\"col\">\r\n                Balance {isOrdered.balance ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n              </th>\r\n              <th scope=\"col\" className=\"action-col\">\r\n                Action\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {users.length > 0 ? (                   \r\n              users.map((data, index) => {\r\n                return (\r\n                  <Fade up duration={index>10 ? 1000: `${index}00`}>\r\n                  <tr key={index}>\r\n                    <th scope=\"row\">{data.account_no}</th>\r\n                    <td>{data.first_name + \" \" + data.last_name}</td>                    \r\n                    <td>{data.address}</td>\r\n                    <td>{data.mobile_no}</td>\r\n                    <td>{data.email}</td>\r\n                    <td>{convertToMoney(data.balance)}</td>\r\n                    <td className=\"action-btns\">\r\n                      <ButtonComponent\r\n                        handleFunction={() => {setCurrentSelectedData(data); setShow(true)}}\r\n                        iconName={<ContactInfo className=\"white\" />}\r\n                        btnClass={\"btn btn-info\"}\r\n                        dbsToggle={\"modal\"}\r\n                        dbsTarget={\"#detailsModal\"}\r\n                      />\r\n                      <ButtonComponent\r\n                        handleFunction={() => {setDeleteUser(true); setDelAccount(data.account_no)}}\r\n                        iconName={<FillDelete />}\r\n                        btnClass={\"btn btn-danger\"}\r\n                      />     \r\n                     </td>               \r\n                  </tr>\r\n                  </Fade>\r\n                  \r\n                );\r\n              })\r\n            )   : (\r\n              <th className=\"no-user-available\" colSpan=\"100%\">\r\n                <h3>No User Available</h3>\r\n              </th>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TableComponent;\r\n","import React from \"react\";\r\n\r\nfunction InputComponent({\r\n  inputType,\r\n  inputClass,\r\n  inputID,\r\n  placeholderTitle,\r\n  handleOnChange,\r\n  inputValue,\r\n  label,\r\n  isReadOnly,\r\n  isPattern,\r\n  dbsDismiss,\r\n  errorMessage,\r\n  isError,\r\n}) {\r\n  return (\r\n    <>\r\n      <input\r\n        style={{border: isError && `red 2px solid`}}\r\n        type={inputType}\r\n        className={inputClass}\r\n        id={inputID}\r\n        placeholder={placeholderTitle}\r\n        readOnly={isReadOnly && true}\r\n        onChange={(e) => handleOnChange(e.target.value)}\r\n        value={inputValue}\r\n        pattern={isPattern && \"(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}\"}\r\n        title={isPattern && `Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters`}\r\n        data-bs-dismiss={dbsDismiss}\r\n        // required      \r\n      />\r\n      {label ? <label>{label}</label> : \"\"}\r\n      {errorMessage && errorMessage}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InputComponent;\r\n","import React from 'react'\r\nimport InputComponent from './InputComponent'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nconst ModalComponent = ({accountNo, setUserName, userName, setPassword, password, retypePassword, setRetypePassword, setFirstName, firstName, setLastName, lastName, setAddress, address, setMobileNo, mobileNo, setEmail, email, setBalance, balance, handleSaveUsers, errorState, setErrorState, modalShow, closeModalComponent, resetUserInput}) => {\r\n\r\n    return (\r\n        \r\n        <div className=\"modal-details-component\">\r\n              <Modal\r\n                    show={modalShow}\r\n                    size=\"md\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    dialogClassName=\"modal-details-component\"\r\n                >\r\n                        <Modal.Header>\r\n                             <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                             <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">User Information</h5>\r\n                                <p className=\"required\">***All Fields are REQUIRED***</p>\r\n                            </div>\r\n                             <button type=\"button\" className=\"btn-close modal-close-btn\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={() => {closeModalComponent(); resetUserInput()}}></button>\r\n                             </Modal.Title>\r\n                         </Modal.Header>\r\n                         <Modal.Body>\r\n                            <form onSubmit={handleSaveUsers} onClick={()=>setErrorState(false)}  noValidate>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"text\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingInput\"}\r\n                                        placeholderTitle={\"Account No.\"}                                \r\n                                        inputValue={accountNo}                                \r\n                                        label={`Account No.`}\r\n                                        isReadOnly={true}                                \r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"text\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingUserName\"}\r\n                                        placeholderTitle={\"Username\"}\r\n                                        handleOnChange={setUserName}                                \r\n                                        inputValue={userName}                                \r\n                                        label={`Username`}\r\n                                        errorMessage={(errorState.username && <p className=\"error-message\">Username is required</p>)\r\n                                        || (errorState.usernameAlreadyExists && <p className=\"error-message\">Username already exists</p>)\r\n                                        || (errorState.usernameCantContainSpace && <p className=\"error-message\">Username can't contain spaces</p>)}  \r\n                                        isError={errorState.username || errorState.usernameAlreadyExists || errorState.usernameCantContainSpace}                                                           \r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"password\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingPassword\"}\r\n                                        placeholderTitle={\"Password\"}\r\n                                        handleOnChange={setPassword}                                \r\n                                        inputValue={password}                                \r\n                                        label={`Password`} \r\n                                        isPattern={true}     \r\n                                        errorMessage={(errorState.password && <p className=\"error-message\">Password is required</p>)\r\n                                        || (errorState.passwordsDoNotMatch && <p className=\"error-message\">Passwords do not match</p>)}  \r\n                                        isError={errorState.password || errorState.passwordsDoNotMatch}                                                       \r\n                                    />\r\n                                </div>                                \r\n                                <div className=\"form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"password\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingRetypePassword\"}\r\n                                        placeholderTitle={\"Retype Password\"}\r\n                                        handleOnChange={setRetypePassword}                                \r\n                                        inputValue={retypePassword}                                \r\n                                        label={`Retype Password`}\r\n                                        errorMessage={errorState.retypePassword && <p className=\"error-message\">Retype Password is required</p>}  \r\n                                        isError={errorState.retypePassword}  \r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"text\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingFirstName\"}\r\n                                        placeholderTitle={\"First Name\"}\r\n                                        handleOnChange={setFirstName}                                \r\n                                        inputValue={firstName}                                \r\n                                        label={`First Name`}   \r\n                                        errorMessage={(errorState.firstName && <p className=\"error-message\">Firstname is required</p>)\r\n                                        || (errorState.firstNameCantStartWithNumber && <p className=\"error-message\">First name can't start with a number</p>)}  \r\n                                        isError={errorState.firstName || errorState.firstNameCantStartWithNumber}                                                            \r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"text\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingLastName\"}\r\n                                        placeholderTitle={\"Last Name\"}\r\n                                        handleOnChange={setLastName}                                \r\n                                        inputValue={lastName}                                \r\n                                        label={`Last Name`}  \r\n                                        errorMessage={(errorState.lastName && <p className=\"error-message\">Lastname is required</p>)\r\n                                        || (errorState.lastNameCantStartWithNumber && <p className=\"error-message\">Last name can't start with a number</p>)}  \r\n                                        isError={errorState.lastName || errorState.lastNameCantStartWithNumber}                                                           \r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"text\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingAddress\"}\r\n                                        placeholderTitle={\"Address\"}\r\n                                        handleOnChange={setAddress}                                \r\n                                        inputValue={address}                                \r\n                                        label={`Address`}  \r\n                                        errorMessage={errorState.address && <p className=\"error-message\">Address is required</p>}  \r\n                                        isError={errorState.address}                                                          \r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"number\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingActiveNo\"}\r\n                                        placeholderTitle={\"Active Mobile No.\"}\r\n                                        handleOnChange={setMobileNo}\r\n                                        inputValue={mobileNo}                                \r\n                                        label={`Active Mobile No.`}\r\n                                        isMobileNo={true}\r\n                                        errorMessage={errorState.mobileNo && <p className=\"error-message\">Mobile number is required</p>}  \r\n                                        isError={errorState.mobileNo}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"email\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingEmail\"}\r\n                                        placeholderTitle={\"Email Address\"}\r\n                                        handleOnChange={setEmail}                                \r\n                                        inputValue={email}                                \r\n                                        label={`Email Address`}  \r\n                                        errorMessage={(errorState.email && <p className=\"error-message\">Email is required</p>) ||\r\n                                        (errorState.invalidEmailFormat && <p className=\"error-message\">Invalid email format</p>)}  \r\n                                        isError={errorState.email || errorState.invalidEmailFormat}                                                            \r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"number\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingBalance\"}\r\n                                        placeholderTitle={\"Balance\"}\r\n                                        handleOnChange={setBalance}                                \r\n                                        inputValue={balance}                           \r\n                                        label={`Balance`}                                                          \r\n                                    />\r\n                                </div>\r\n                                \r\n                                <div className=\"form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"submit\"}\r\n                                        inputClass={\"submit-btn\"}                              \r\n                                        inputValue={'Submit'}                                                   \r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </Modal.Body>\r\n                </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalComponent\r\n","import React, {useState} from 'react'\r\nimport ButtonComponent from './ButtonComponent'\r\nimport InputComponent from './InputComponent'\r\nimport {Modal, Button} from 'react-bootstrap'\r\n\r\nconst ModalForDetailsComponent = (  \r\n  {currentSelectedData,  \r\n  convertToMoney,\r\n  setAmountToWithdraw,\r\n  amountToWithdraw,\r\n  handleWithdraw,\r\n  setAmountToDeposit,\r\n  amountToDeposit,\r\n  handleDeposit,\r\n  setTransferTo,\r\n  setAmountToTransfer,\r\n  transferTo,\r\n  amountToTransfer,  \r\n  handleTransfer,\r\n  modalDetailsAlert,\r\n  resetTransaction,  \r\n  show,\r\n  setShow\r\n  }\r\n) => {       \r\n    return ( \r\n        <div className=\"modal-details-component\">              \r\n        <Modal show={show}>\r\n          <Modal.Header>          \r\n          <Modal.Title><h5 className=\"modal-title\" id=\"exampleModalLabel\">User Information</h5></Modal.Title>\r\n          <button type=\"button\" className=\"btn-close modal-close-btn\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={() => {setShow(false); resetTransaction()}}></button>\r\n        </Modal.Header>\r\n         <Modal.Body>        \r\n                    <div className=\"modal-content\">                   \r\n                    <div className=\"modal-body admin-modal-details\">\r\n                        <div className=\"user-row\">\r\n                            <div className=\"form-floating mb-3\">\r\n                            <InputComponent\r\n                             inputType={\"text\"}\r\n                             inputClass={\"read-only-user-detail form-control\"}\r\n                             placeholderTitle={\"Account No.\"}\r\n                             inputID={\"floatingAccountNumberDetails\"}\r\n                             isReadOnly={true}\r\n                             inputValue={currentSelectedData.account_no}\r\n                             label={\"Account No.\"}\r\n                            />\r\n                            </div>\r\n                            <div className=\"form-floating mb-3\">\r\n                            <InputComponent\r\n                             inputType={\"text\"}\r\n                             inputClass={\"read-only-user-detail form-control\"}\r\n                             placeholderTitle={\"User Name\"}\r\n                             inputID={\"floatingUserNameDetails\"}\r\n                             isReadOnly={true}\r\n                             inputValue={currentSelectedData.username}\r\n                             label={\"User Name\"}\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-row\">\r\n                            <div className=\"form-floating mb-3\">\r\n                                <InputComponent\r\n                                 inputType={\"text\"}\r\n                                 inputClass={\"read-only-user-detail form-control\"}\r\n                                 placeholderTitle={\"First Name\"}\r\n                                 inputID={\"floatingFirstNameDetails\"}\r\n                                 isReadOnly={true}\r\n                                 inputValue={currentSelectedData.first_name}\r\n                                 label={\"First Name\"}\r\n                                 />\r\n                            </div>\r\n                            <div className=\"form-floating mb-3\">\r\n                                <InputComponent\r\n                                 inputType={\"text\"}\r\n                                 inputClass={\"read-only-user-detail form-control\"}\r\n                                 placeholderTitle={\"Last Name\"}\r\n                                 inputID={\"floatingLastNameDetails\"}\r\n                                 isReadOnly={true}\r\n                                 inputValue={currentSelectedData.last_name}\r\n                                 label={\"Last Name\"}\r\n                                 />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-row\">\r\n                            <div className=\"form-floating mb-3\">\r\n                                <InputComponent\r\n                                 inputType={\"text\"}\r\n                                 inputClass={\"read-only-user-detail form-control\"}\r\n                                 placeholderTitle={\"Address\"}\r\n                                 inputID={\"floatingAddressDetails\"}\r\n                                 isReadOnly={true}\r\n                                 inputValue={currentSelectedData.address}\r\n                                 label={\"Address\"}\r\n                                 />\r\n                            </div>\r\n                            <div className=\"form-floating mb-3\">\r\n                                <InputComponent\r\n                                inputType={\"number\"}\r\n                                inputClass={\"read-only-user-detail form-control\"}\r\n                                placeholderTitle={\"Active Mobile No.\"}\r\n                                inputID={\"floatingActiveNoDetails\"}\r\n                                isReadOnly={true}\r\n                                inputValue={currentSelectedData.mobile_no}\r\n                                label={\"Active Mobile No.\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-row\">\r\n                            <div className=\"form-floating mb-3\">\r\n                                <InputComponent\r\n                                inputType={\"email\"}\r\n                                inputClass={\"read-only-user-detail form-control\"}\r\n                                placeholderTitle={\"Email Address\"}\r\n                                inputID={\"floatingEmailDetails\"}\r\n                                isReadOnly={true}\r\n                                inputValue={currentSelectedData.email}\r\n                                label={\"Email Address\"}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-floating mb-3\">\r\n                                <InputComponent\r\n                                inputType={\"text\"}\r\n                                inputClass={\"read-only-user-detail form-control\"}\r\n                                placeholderTitle={\"Balance\"}\r\n                                inputID={\"floatingBalanceDetails\"}\r\n                                isReadOnly={true}\r\n                                inputValue={convertToMoney(currentSelectedData.balance)}\r\n                                label={\"Balance\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                         <div className='modal-header'>\r\n                            <h5 className=\"modal-title\" >Transactions</h5>\r\n                        </div>\r\n                        <div className=\"transaction-body-container\">\r\n                            <div className=\"transaction-body user-row\">\r\n                                <div className=\"transaction form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"number\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingWithdraw\"}\r\n                                        placeholderTitle={\"Withdraw\"}\r\n                                        handleOnChange={setAmountToWithdraw}\r\n                                        inputValue={amountToWithdraw}\r\n                                        label={\"₱ Amount to Withdraw\"} \r\n                                        // errorMessage={modalDetailsAlert.insufficientBalance && <p className=\"error-message\">You have an Insufficient Balance. Please Try Again!</p>}\r\n                                        // successfulMessage={modalDetailsAlert.successful && <p className=\"success-message\">Withdrawn Successfully!</p>}\r\n                                        // enterAnAmountToWithdraw={modalDetailsAlert.enterAnAmountToWithdraw && <p className=\"enter-an-amount-message\">Please enter an Amount to Withdraw</p>}\r\n                                    />\r\n                                </div>\r\n                                \r\n                                <ButtonComponent\r\n                                    btnClass={\"btn btn-primary\"}                                   \r\n                                    handleFunction={() => handleWithdraw()}                                    \r\n                                    btnDescription={\"Withdraw\"}\r\n                                />\r\n                            </div>\r\n\r\n                            <div style={{marginBottom: '1rem'}}>\r\n                                {modalDetailsAlert.insufficientBalance && <p className=\"error-message\">You have an Insufficient Balance. Please Try Again!</p>}                                \r\n                                {modalDetailsAlert.enterAnAmountToWithdraw && <p className=\"enter-an-amount-message\">Please enter an Amount to Withdraw.</p>}\r\n                                {modalDetailsAlert.amountEnteredIsNegativeWithdraw && <p className=\"error-message\">Amount withdrawn cannot be negative.</p>}                                \r\n                            </div>\r\n\r\n                            <div className=\"transaction-body user-row\">\r\n                                <div className=\"transaction form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"number\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingDeposit\"}\r\n                                        placeholderTitle={\"Deposit\"}\r\n                                        handleOnChange={setAmountToDeposit}\r\n                                        inputValue={amountToDeposit}\r\n                                        label={\"₱ Amount to Deposit\"}\r\n                                    />\r\n                                </div>\r\n                                \r\n                                <ButtonComponent\r\n                                    btnClass={\"btn btn-primary\"}\r\n                                    handleFunction={() => handleDeposit()}\r\n                                    btnDescription={\"Deposit\"}\r\n                                />\r\n                            </div>\r\n\r\n                            <div style={{marginBottom: '1rem'}}>                               \r\n                                {modalDetailsAlert.enterAnAmountToDeposit && <p className=\"enter-an-amount-message\">Please enter an Amount to Deposit.</p>}\r\n                                {modalDetailsAlert.amountEnteredIsNegativeDeposit && <p className=\"error-message\">Amount deposited cannot be negative.</p>}\r\n                            </div>\r\n\r\n                            <h6 className=\"modal-title\" >Transfer Funds</h6>\r\n                            <p>To</p>\r\n                            <div className=\"transaction-body user-row\">\r\n                                <div className=\"transaction form mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"text\"}\r\n                                        inputClass={\"transfer-names form-control\"}\r\n                                        inputID={\"floatingTransferTo\"}\r\n                                        placeholderTitle={\"Account No.\"}\r\n                                        handleOnChange={setTransferTo}\r\n                                        inputValue={transferTo}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <p>Amount</p>\r\n                            <div className=\"transaction-body user-row\">\r\n                                <div className=\"transaction form-floating mb-3\">                                                                \r\n                                    <InputComponent \r\n                                        inputType={\"number\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingTransfer\"}\r\n                                        placeholderTitle={\"Transfer\"}\r\n                                        inputValue={amountToTransfer}\r\n                                        handleOnChange={setAmountToTransfer}                                        \r\n                                        isLabel={true}\r\n                                        label={`Amount to Transfer`}\r\n                                    />                                    \r\n                                </div>\r\n                                \r\n                                <ButtonComponent\r\n                                    btnClass={\"btn btn-primary\"}\r\n                                    handleFunction={() => handleTransfer()}\r\n                                    btnDescription={\"Transfer\"}\r\n                                />\r\n                            </div>\r\n                            <div style={{marginBottom: '1rem'}}>\r\n                                {modalDetailsAlert.amountEnteredIsNegative && <p className=\"error-message\">Amount entered cannot be negative.</p>}\r\n                                {modalDetailsAlert.insufficientBalanceTransfer && <p className=\"error-message\">You have an Insufficient Balance. Please Try Again.</p>}                                \r\n                                {modalDetailsAlert.enterAnAmountToTransfer && <p className=\"enter-an-amount-message\">Please enter an amount to transfer.</p>}\r\n                                {modalDetailsAlert.sameAccountNumber &&  <p className=\"enter-an-amount-message\">Invalid Action. You cannot send amount to the same Account #. Please Try Again.</p>}\r\n                                {modalDetailsAlert.accountNumberNotValidTransfer && <p className=\"error-message\">Account# is not valid. Please Try Again.</p>}                      \r\n                                {modalDetailsAlert.accountNumberCannotBeBlank && <p className=\"error-message\">Account# to transfer to cannot be blank. Please Try Again. </p>}\r\n                            </div>\r\n                        </div>\r\n                    </div>                 \r\n                    </div>        \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{setShow(false); resetTransaction()}}>\r\n            Close\r\n          </Button>        \r\n        </Modal.Footer>\r\n    </Modal>\r\n    </div> \r\n    )\r\n}\r\n\r\nexport default ModalForDetailsComponent\r\n","import './style.css';\r\nimport TableComponent from './TableComponent';\r\nimport ModalComponent from './ModalComponent';\r\nimport ModalDetailsComponent from './ModalDetailsComponent';\r\nimport useHooks from './hooks'\r\n\r\nconst Index = () => {\r\n    const {\r\n        currentSelectedData,\r\n        setCurrentSelectedData, \r\n        users, \r\n        accountNo,  \r\n        userName, \r\n        setUserName, \r\n        password, \r\n        setPassword, \r\n        retypePassword, \r\n        setRetypePassword, \r\n        firstName, \r\n        setFirstName, \r\n        lastName, \r\n        setLastName, \r\n        address, \r\n        setAddress, \r\n        mobileNo, \r\n        setMobileNo, \r\n        email, \r\n        setEmail, \r\n        balance, \r\n        setBalance, \r\n        amountToWithdraw, \r\n        setAmountToWithdraw, \r\n        amountToDeposit, \r\n        setAmountToDeposit, \r\n        transferTo, \r\n        setTransferTo, \r\n        amountToTransfer, \r\n        setAmountToTransfer,\r\n        transferMessage,\r\n        handleGenerateAccountNo,\r\n        handleSaveUsers,\r\n        handleDeleteUser,\r\n        handleWithdraw,\r\n        handleDeposit,\r\n        handleTransfer,\r\n        errorState,\r\n        setErrorState,\r\n        convertToMoney,\r\n        modalDetailsAlert,\r\n        resetTransaction,        \r\n        modalShow,\r\n        closeModalComponent,\r\n        resetUserInput,\r\n        insertUserData,        \r\n        loadDummyData,\r\n        searchTerm,\r\n        searchResults,\r\n        searchHandler,\r\n        deleteDummyAccounts,\r\n        sortByAccountNumber,\r\n        sortByFullName,\r\n        sortByAddress,\r\n        sortByMobileNo,\r\n        sortByEmail,\r\n        sortByCurrentBalance,\r\n        isOrdered,\r\n        show,\r\n        setShow,\r\n        delAccount,\r\n        setDelAccount,               \r\n    } = useHooks();\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"users-container\">            \r\n            <TableComponent\r\n                handleDeleteUser={handleDeleteUser}\r\n                users={searchTerm.length < 1 ? users : searchResults}\r\n                setCurrentSelectedData={setCurrentSelectedData}\r\n                insertUserData={insertUserData}\r\n                loadDummyData={loadDummyData}\r\n                searchHandler={searchHandler}\r\n                searchTerm={searchTerm}\r\n                deleteDummyAccounts={deleteDummyAccounts}\r\n                handleGenerateAccountNo={handleGenerateAccountNo}\r\n                sortByAccountNumber={sortByAccountNumber}\r\n                sortByFullName={sortByFullName}                \r\n                sortByAddress={sortByAddress}\r\n                sortByMobileNo={sortByMobileNo}\r\n                sortByEmail={sortByEmail}\r\n                sortByCurrentBalance={sortByCurrentBalance}\r\n                convertToMoney={convertToMoney}\r\n                isOrdered={isOrdered}   \r\n                show={show}\r\n                setShow={setShow}  \r\n                delAccount={delAccount}\r\n                setDelAccount={setDelAccount}                         \r\n            />       \r\n            {/* <!-- Modal --> */}\r\n            <ModalComponent\r\n                accountNo={accountNo}  \r\n                setUserName={setUserName}\r\n                userName={userName}\r\n                setPassword={setPassword}\r\n                password={password}\r\n                retypePassword={retypePassword}\r\n                setRetypePassword={setRetypePassword}\r\n                setFirstName={setFirstName}\r\n                firstName={firstName}\r\n                setLastName={setLastName}\r\n                lastName={lastName}\r\n                setAddress={setAddress}\r\n                address={address}\r\n                setMobileNo={setMobileNo}\r\n                mobileNo={mobileNo}\r\n                setEmail={setEmail}\r\n                email={email}\r\n                setBalance={setBalance}\r\n                balance={balance}\r\n                handleSaveUsers={handleSaveUsers}   \r\n                errorState={errorState} \r\n                setErrorState={setErrorState}                 \r\n                modalShow={modalShow}\r\n                closeModalComponent={closeModalComponent}\r\n                resetUserInput={resetUserInput}\r\n            />   \r\n            {/* ModalComponentForDetails */}             \r\n            <ModalDetailsComponent\r\n                currentSelectedData={currentSelectedData}            \r\n                convertToMoney={convertToMoney}\r\n                setAmountToWithdraw={setAmountToWithdraw}\r\n                amountToWithdraw={amountToWithdraw}\r\n                handleWithdraw={handleWithdraw}\r\n                amountToDeposit={amountToDeposit}\r\n                setAmountToDeposit={setAmountToDeposit}\r\n                transferTo={transferTo}\r\n                setTransferTo={setTransferTo}\r\n                amountToTransfer={amountToTransfer}\r\n                setAmountToTransfer={setAmountToTransfer}                \r\n                handleDeposit={handleDeposit}\r\n                handleTransfer={handleTransfer}\r\n                modalDetailsAlert={modalDetailsAlert}\r\n                resetTransaction={resetTransaction}                \r\n                show={show}\r\n                setShow={setShow}                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index;\r\n","import { useState } from 'react'\r\nimport useLocalStorage from '../../Users/useLocalStorage'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useHooks = () => {    \r\n    const [withdrawalHistories, setWithdrawalHistories] = useLocalStorage('withdrawalHistories', [])\r\n\r\n    const [isOrdered, setIsOrdered] = useState({\r\n        accountNumber: false,\r\n        fullName: false,\r\n        date: false,\r\n        withdrawnAmount: false,\r\n        currentBalance: false,            \r\n    })  \r\n    \r\n\r\n    const sortByAccountNumber = () => {\r\n        setIsOrdered({...isOrdered,\r\n            accountNumber: !isOrdered.accountNumber,        \r\n        })        \r\n        withdrawalHistories.sort((a, b)=>{\r\n        return (isOrdered.accountNumber ? a.account_no - b.account_no : b.account_no - a.account_no)\r\n        })\r\n        setWithdrawalHistories([...withdrawalHistories])\r\n        toastNotify(\"success\", \"Sorted By Account Number\", \"top-right\")                  \r\n    } \r\n\r\n    \r\n    const sortByFullName = () => {  \r\n        setIsOrdered({...isOrdered,\r\n            fullName: !isOrdered.fullName,         \r\n        })                \r\n            withdrawalHistories.sort((a, b)=>{              \r\n            let nameA = `${a.first_name.toUpperCase()} ${a.last_name.toUpperCase()}`;\r\n            let nameB = `${b.first_name.toUpperCase()} ${b.last_name.toUpperCase()}`;                    \r\n            if (nameA > nameB) {\r\n                return (isOrdered.fullName ? 1: -1)\r\n              }\r\n            if (nameA < nameB) {\r\n                return (isOrdered.fullName ? -1: 1)\r\n              }\r\n              return 0        \r\n          });            \r\n            setWithdrawalHistories([...withdrawalHistories])      \r\n            toastNotify(\"success\", \"Sorted By Full Name\", \"top-right\")    \r\n    }\r\n\r\n    const sortByDate = () => {\r\n        setIsOrdered({...isOrdered,\r\n            date: !isOrdered.date,           \r\n        })        \r\n        withdrawalHistories.sort((a, b)=>{\r\n        const regex = [\"/\", \":\", \",\", \" \"]\r\n        const date1 = parseInt(a.currentDatenTime.slice(0, 16).split(\"\").filter(num=>num =! regex.includes(num)).join(\"\"))\r\n        const date2 = parseInt(b.currentDatenTime.slice(0, 16).split(\"\").filter(num=>num =! regex.includes(num)).join(\"\"))\r\n        return (isOrdered.date ? date1 - date2 : date2 - date1)\r\n        })\r\n        setWithdrawalHistories([...withdrawalHistories]) \r\n        toastNotify(\"success\", \"Sorted By Date\", \"top-right\")\r\n    }\r\n  \r\n\r\n    const sortByWithdrawAmount = () => {\r\n        setIsOrdered({...isOrdered,\r\n            withdrawnAmount: !isOrdered.withdrawnAmount,           \r\n        })        \r\n        withdrawalHistories.sort((a, b)=>{\r\n        return (isOrdered.withdrawnAmount ? a.latestWithdrawnAmount - b.latestWithdrawnAmount : b.latestWithdrawnAmount - a.latestWithdrawnAmount)\r\n        })\r\n        setWithdrawalHistories([...withdrawalHistories]) \r\n        toastNotify(\"success\", \"Sorted By Withdrawn Amount\", \"top-right\")        \r\n    } \r\n\r\n    const sortByCurrentBalance = () => {\r\n        setIsOrdered({...isOrdered,\r\n            currentBalance: !isOrdered.currentBalance,           \r\n        })        \r\n        withdrawalHistories.sort((a, b)=>{\r\n        return (isOrdered.currentBalance ? a.balance - b.balance : b.balance - a.balance)\r\n        })\r\n        setWithdrawalHistories([...withdrawalHistories]) \r\n        toastNotify(\"success\", \"Sorted By Current Balance\", \"top-right\")        \r\n    } \r\n\r\n    const toastNotify = (type, str, position, colored=null) => {\r\n        if(type===\"success\"){\r\n        toast.success(str, {\r\n        position: position,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: colored            \r\n        }); \r\n    } else if (type===\"warn\"){\r\n        toast.warning(str, {\r\n            position: position,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined, \r\n            theme: colored\r\n            }); \r\n    } \r\n}\r\n\r\n    return {      \r\n        withdrawalHistories,\r\n        setWithdrawalHistories,\r\n        isOrdered,  \r\n        sortByAccountNumber,        \r\n        sortByDate,\r\n        sortByFullName,\r\n        sortByWithdrawAmount,\r\n        sortByCurrentBalance        \r\n    }\r\n}\r\n\r\nexport default useHooks\r\n","import './style.css';\r\nimport {convertToMoney} from '../../lib/helpers'\r\nimport useHooks from './hooks';\r\nimport { ArrowSortedDownIcon, ArrowSortedUpIcon } from '../../Users/component';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Fade  from 'react-reveal/Fade'\r\n\r\nconst Index = ({loginAccount, isUser}) => {    \r\n    \r\n    const {withdrawalHistories,\r\n        setWithdrawalHistories,\r\n        isOrdered,\r\n        sortByAccountNumber,        \r\n        sortByDate,\r\n        sortByFullName,\r\n        sortByWithdrawAmount,\r\n        sortByCurrentBalance} = useHooks()\r\n\r\n    const filteredHistory = withdrawalHistories.filter((user) => {return user.account_no === loginAccount[0].account_no})\r\n\r\n    return (\r\n        <>\r\n         <ToastContainer\r\n      pauseOnFocusLoss={false}   \r\n      limit={8}      \r\n      />\r\n          <div className=\"transaction-header\">\r\n          <Fade down>\r\n            <h1>Withdrawals History</h1>   \r\n            </Fade>         \r\n            </div>  \r\n        <div className=\"dashboard-container\">  \r\n      \r\n            <table className=\"table\">\r\n                <thead className=\"table-header\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=> !isUser && sortByAccountNumber()} scope=\"col\">\r\n                        Acct # {!isUser ? isOrdered.accountNumber ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/> : null}\r\n                        </th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=> !isUser && sortByFullName()} scope=\"col\">\r\n                        Full Name {!isUser ? isOrdered.fullName ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/> : null}\r\n                        </th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=>sortByDate()} scope=\"col\">\r\n                        Date {isOrdered.date ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n                        </th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=>sortByWithdrawAmount()} scope=\"col\">\r\n                        Withdrawn Amt. {isOrdered.withdrawnAmount ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n                        </th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=>sortByCurrentBalance()} scope=\"col\">\r\n                        Current Bal. {isOrdered.currentBalance ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                \r\n                <tbody>\r\n                    {!isUser ? \r\n                    withdrawalHistories.map((user, index) => {\r\n                        return (\r\n                            <Fade up duration={index>10 ? 1000: `${index}00`}>\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{index+1}</th>\r\n                                <td>{user.account_no}</td>\r\n                                <td>{user.first_name + \" \" + user.last_name}</td>\r\n                                <td>{user.currentDatenTime}</td>\r\n                                <td>{convertToMoney(user.latestWithdrawnAmount)}</td>\r\n                                <td>{convertToMoney(user.balance)}</td>\r\n                            </tr>\r\n                            </Fade>\r\n                        )\r\n                    })\r\n                    :\r\n                    filteredHistory.map((user, index) => {\r\n                        return (\r\n                            <Fade up duration={index>10 ? 1000: `${index}00`}>\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{index+1}</th>\r\n                                <td>{user.account_no}</td>\r\n                                <td>{user.first_name + \" \" + user.last_name}</td>\r\n                                <td>{user.currentDatenTime}</td>\r\n                                <td>{convertToMoney(user.latestWithdrawnAmount)}</td>\r\n                                <td>{convertToMoney(user.balance)}</td>\r\n                            </tr>\r\n                            </Fade>\r\n                        )\r\n                    })}\r\n                   \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import { useState } from 'react'\r\nimport useLocalStorage from '../../Users/useLocalStorage'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useHooks = () => {    \r\n    const [depositHistories, setDepositHistories] = useLocalStorage('depositHistories', [])\r\n\r\n    const [isOrdered, setIsOrdered] = useState({\r\n        accountNumber: false,\r\n        fullName: false,\r\n        date: false,\r\n        depositAmount: false,                \r\n        currentBalance: false,            \r\n    })    \r\n\r\n    const sortByAccountNumber = () => {\r\n        setIsOrdered({...isOrdered,\r\n            accountNumber: !isOrdered.accountNumber,        \r\n        })        \r\n        depositHistories.sort((a, b)=>{\r\n        return (isOrdered.accountNumber ? a.account_no - b.account_no : b.account_no - a.account_no)\r\n        })\r\n        setDepositHistories([...depositHistories]) \r\n        toastNotify(\"success\", \"Sorted By Account Number\", \"top-right\")                          \r\n    } \r\n    \r\n    const sortByFullName = () => {  \r\n        setIsOrdered({...isOrdered,\r\n            fullName: !isOrdered.fullName,         \r\n        })                \r\n            depositHistories.sort((a, b)=>{              \r\n            let nameA = `${a.first_name.toUpperCase()} ${a.last_name.toUpperCase()}`;\r\n            let nameB = `${b.first_name.toUpperCase()} ${b.last_name.toUpperCase()}`;                    \r\n            if (nameA > nameB) {\r\n                return (isOrdered.fullName ? 1: -1)\r\n              }\r\n            if (nameA < nameB) {\r\n                return (isOrdered.fullName ? -1: 1)\r\n              }\r\n              return 0        \r\n          });            \r\n            setDepositHistories([...depositHistories]) \r\n            toastNotify(\"success\", \"Sorted By Full Name\", \"top-right\")           \r\n    }\r\n\r\n    const sortByDate = () => {\r\n        setIsOrdered({...isOrdered,\r\n            date: !isOrdered.date,           \r\n        })        \r\n        depositHistories.sort((a, b)=>{\r\n        const regex = [\"/\", \":\", \",\", \" \"]\r\n        const date1 = parseInt(a.currentDatenTime.slice(0, 16).split(\"\").filter(num=>num =! regex.includes(num)).join(\"\"))\r\n        const date2 = parseInt(b.currentDatenTime.slice(0, 16).split(\"\").filter(num=>num =! regex.includes(num)).join(\"\"))\r\n        return (isOrdered.date ? date1 - date2 : date2 - date1)\r\n        })\r\n        setDepositHistories([...depositHistories]) \r\n        toastNotify(\"success\", \"Sorted By Date\", \"top-right\")\r\n    }\r\n  \r\n\r\n    const sortByDepositAmount = () => {\r\n        setIsOrdered({...isOrdered,\r\n            depositAmount: !isOrdered.depositAmount,           \r\n        })        \r\n        depositHistories.sort((a, b)=>{\r\n        return (isOrdered.depositAmount ? a.latestDepositAmount - b.latestDepositAmount : b.latestDepositAmount - a.latestDepositAmount)\r\n        })\r\n        setDepositHistories([...depositHistories])  \r\n        toastNotify(\"success\", \"Sorted By Deposit Amount\", \"top-right\")               \r\n    }    \r\n\r\n    const sortByCurrentBalance = () => {\r\n        setIsOrdered({...isOrdered,\r\n            currentBalance: !isOrdered.currentBalance,           \r\n        })        \r\n        depositHistories.sort((a, b)=>{\r\n        return (isOrdered.currentBalance ? a.balance - b.balance : b.balance - a.balance)\r\n        })\r\n        setDepositHistories([...depositHistories])   \r\n        toastNotify(\"success\", \"Sorted By Current Balance\", \"top-right\")              \r\n    } \r\n    \r\n    const toastNotify = (type, str, position, colored=null) => {\r\n        if(type===\"success\"){\r\n        toast.success(str, {\r\n        position: position,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: colored            \r\n        }); \r\n    } else if (type===\"warn\"){\r\n        toast.warning(str, {\r\n            position: position,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined, \r\n            theme: colored\r\n            }); \r\n    } \r\n}\r\n\r\n    return {      \r\n        depositHistories,\r\n        setDepositHistories,\r\n        isOrdered,  \r\n        sortByAccountNumber,        \r\n        sortByDate,\r\n        sortByFullName,\r\n        sortByDepositAmount,        \r\n        sortByCurrentBalance        \r\n    }\r\n}\r\n\r\nexport default useHooks\r\n","import './style.css';\r\nimport {convertToMoney} from '../../lib/helpers'\r\nimport { ArrowSortedDownIcon, ArrowSortedUpIcon } from '../../Users/component';\r\nimport useHooks from './hooks';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Fade  from 'react-reveal/Fade'\r\n\r\nconst Index = ({loginAccount, isUser}) => {       \r\n\r\n    const {depositHistories,\r\n        setDepositHistories,\r\n        isOrdered,\r\n        sortByAccountNumber,        \r\n        sortByDate,\r\n        sortByFullName,\r\n        sortByDepositAmount,\r\n        sortByCurrentBalance} = useHooks()   \r\n\r\n        const filteredHistory = depositHistories.filter((user) => {return user.account_no === loginAccount[0].account_no})\r\n\r\n    return (\r\n        <>\r\n           <ToastContainer\r\n            pauseOnFocusLoss={false}   \r\n            limit={8}      \r\n            />\r\n        <div className=\"transaction-header\">\r\n            <Fade down>\r\n            <h1>Deposits History</h1>  \r\n            </Fade>           \r\n            </div>\r\n        <div className=\"dashboard-container\">            \r\n            <table className=\"table\">\r\n                <thead className=\"table-header\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=>!isUser && sortByAccountNumber()} scope=\"col\">\r\n                        Acct # {!isUser ? isOrdered.accountNumber ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/> : null}\r\n                        </th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=> !isUser &&  sortByFullName()} scope=\"col\">\r\n                        Full Name {!isUser ? isOrdered.fullName ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/> : null}\r\n                        </th> \r\n                        <th style={{cursor: \"pointer\"}} onClick={()=>sortByDate()} scope=\"col\">\r\n                        Date {isOrdered.date ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n                        </th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=>sortByDepositAmount()} scope=\"col\">\r\n                        Deposit Amt. {isOrdered.depositAmount ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n                        </th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=>sortByCurrentBalance()} scope=\"col\">\r\n                        Current Bal. {isOrdered.currentBalance ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {!isUser ? \r\n                    depositHistories.map((user, index) => {\r\n                        return (\r\n                            <Fade up duration={index>10 ? 1000: `${index}00`}>\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{index+1}</th>\r\n                                <td>{user.account_no}</td>\r\n                                <td>{user.first_name + \" \" + user.last_name}</td>\r\n                                <td>{user.currentDatenTime}</td>\r\n                                <td>{convertToMoney(user.latestDepositAmount)}</td>\r\n                                <td>{convertToMoney(user.balance)}</td>\r\n                            </tr>\r\n                            </Fade>\r\n                        )\r\n                    })\r\n                    :\r\n                    filteredHistory.map((user, index) => {\r\n                        return (\r\n                            <Fade up duration={index>10 ? 1000: `${index}00`}>\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{index+1}</th>\r\n                                <td>{user.account_no}</td>\r\n                                <td>{user.first_name + \" \" + user.last_name}</td>\r\n                                <td>{user.currentDatenTime}</td>\r\n                                <td>{convertToMoney(user.latestDepositAmount)}</td>\r\n                                <td>{convertToMoney(user.balance)}</td>\r\n                            </tr>\r\n                            </Fade>\r\n                        )\r\n                    })\r\n                }\r\n                   \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import { useState } from 'react'\r\nimport useLocalStorage from '../../Users/useLocalStorage'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useHooks = () => {    \r\n    const [transfersHistories, setTransfersHistories] = useLocalStorage('transfersHistories', [])\r\n\r\n    const [isOrdered, setIsOrdered] = useState({\r\n        accountNumber: false,\r\n        fullName: false,\r\n        date: false,\r\n        latestTransferTo: false,        \r\n        latestTransferAmount: false,\r\n        currentBalance: false,            \r\n    })   \r\n\r\n    const sortByAccountNumber = () => {\r\n        setIsOrdered({...isOrdered,\r\n            accountNumber: !isOrdered.accountNumber,        \r\n        })        \r\n        transfersHistories.sort((a, b)=>{\r\n        return (isOrdered.accountNumber ? a.account_no - b.account_no : b.account_no - a.account_no)\r\n        })\r\n        setTransfersHistories([...transfersHistories])         \r\n        toastNotify(\"success\", \"Sorted By Account Number\", \"top-right\")                  \r\n    } \r\n    \r\n    const sortByFullName = () => {  \r\n        setIsOrdered({...isOrdered,\r\n            fullName: !isOrdered.fullName,         \r\n        })                \r\n            transfersHistories.sort((a, b)=>{              \r\n            let nameA = `${a.first_name.toUpperCase()} ${a.last_name.toUpperCase()}`;\r\n            let nameB = `${b.first_name.toUpperCase()} ${b.last_name.toUpperCase()}`;                    \r\n            if (nameA > nameB) {\r\n                return (isOrdered.fullName ? 1: -1)\r\n              }\r\n            if (nameA < nameB) {\r\n                return (isOrdered.fullName ? -1: 1)\r\n              }\r\n              return 0        \r\n          });            \r\n            setTransfersHistories([...transfersHistories])        \r\n            toastNotify(\"success\", \"Sorted By Full Name\", \"top-right\")    \r\n    }\r\n\r\n    const sortByDate = () => {\r\n        setIsOrdered({...isOrdered,\r\n            date: !isOrdered.date,           \r\n        })        \r\n        transfersHistories.sort((a, b)=>{\r\n        const regex = [\"/\", \":\", \",\", \" \"]\r\n        const date1 = parseInt(a.currentDatenTime.slice(0, 16).split(\"\").filter(num=>num =! regex.includes(num)).join(\"\"))\r\n        const date2 = parseInt(b.currentDatenTime.slice(0, 16).split(\"\").filter(num=>num =! regex.includes(num)).join(\"\"))\r\n        return (isOrdered.date ? date1 - date2 : date2 - date1)\r\n        })\r\n        setTransfersHistories([...transfersHistories]) \r\n        toastNotify(\"success\", \"Sorted By Date\", \"top-right\")\r\n    }\r\n  \r\n\r\n    const sortByTransferredTo = () => {\r\n        setIsOrdered({...isOrdered,\r\n            latestTransferTo: !isOrdered.latestTransferTo,           \r\n        })        \r\n        transfersHistories.sort((a, b)=>{\r\n        return (isOrdered.latestTransferTo ? a.latestTransferTo - b.latestTransferTo : b.latestTransferTo - a.latestTransferTo)\r\n        })\r\n        setTransfersHistories([...transfersHistories])         \r\n        toastNotify(\"success\", \"Sorted By Account Number Transferred to\", \"top-right\")        \r\n    } \r\n\r\n    const sortByTransferredAmount = () => {\r\n        setIsOrdered({...isOrdered,\r\n            latestTransferAmount: !isOrdered.latestTransferAmount,           \r\n        })        \r\n        transfersHistories.sort((a, b)=>{\r\n        return (isOrdered.latestTransferAmount ? a.latestTransferAmount - b.latestTransferAmount : b.latestTransferAmount - a.latestTransferAmount)\r\n        })\r\n        setTransfersHistories([...transfersHistories]) \r\n        toastNotify(\"success\", \"Sorted By Transferred Amount\", \"top-right\")                \r\n    } \r\n\r\n    const sortByCurrentBalance = () => {\r\n        setIsOrdered({...isOrdered,\r\n            currentBalance: !isOrdered.currentBalance,           \r\n        })        \r\n        transfersHistories.sort((a, b)=>{\r\n        return (isOrdered.currentBalance ? a.balance - b.balance : b.balance - a.balance)\r\n        })\r\n        setTransfersHistories([...transfersHistories])         \r\n        toastNotify(\"success\", \"Sorted By Current Balance\", \"top-right\")        \r\n    } \r\n\r\n    const toastNotify = (type, str, position, colored=null) => {\r\n        if(type===\"success\"){\r\n        toast.success(str, {\r\n        position: position,\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: colored            \r\n        }); \r\n    } else if (type===\"warn\"){\r\n        toast.warning(str, {\r\n            position: position,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined, \r\n            theme: colored\r\n            }); \r\n    } \r\n}\r\n\r\n    return {      \r\n        transfersHistories,\r\n        setTransfersHistories,\r\n        isOrdered,  \r\n        sortByAccountNumber,        \r\n        sortByDate,\r\n        sortByFullName,\r\n        sortByTransferredTo,\r\n        sortByTransferredAmount,\r\n        sortByCurrentBalance,                \r\n    }\r\n}\r\n\r\nexport default useHooks\r\n","import './style.css';\r\nimport {convertToMoney} from '../../lib/helpers'\r\nimport useHooks from './hooks';\r\nimport { ArrowSortedDownIcon, ArrowSortedUpIcon } from '../../Users/component';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Fade  from 'react-reveal/Fade'\r\n\r\nconst Index = ({loginAccount, isUser}) => {\r\n\r\n    const {transfersHistories,\r\n        setTransfersHistories,\r\n        isOrdered,\r\n        sortByAccountNumber,        \r\n        sortByDate,\r\n        sortByFullName,\r\n        sortByTransferredTo,\r\n        sortByTransferredAmount,\r\n        sortByCurrentBalance,\r\n    } = useHooks()    \r\n\r\n    const filteredHistory = transfersHistories.filter((user) => {return user.account_no === loginAccount[0].account_no})\r\n\r\n    return (\r\n        <>\r\n          <ToastContainer\r\n      pauseOnFocusLoss={false}   \r\n      limit={8}      \r\n      />\r\n        <div className=\"transaction-header\">\r\n            <Fade down>\r\n            <h1>Transfers History</h1>            \r\n            </Fade>   \r\n            </div>\r\n        <div className=\"dashboard-container\">\r\n            \r\n            <table className=\"table\">\r\n                <thead className=\"table-header\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=> !isUser && sortByAccountNumber()} scope=\"col\">\r\n                        Acct #  {!isUser ? isOrdered.accountNumber ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/> : null}\r\n                        </th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=> !isUser &&  sortByFullName()} scope=\"col\">\r\n                        Full Name {!isUser ? isOrdered.fullName ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/> : null}\r\n                        </th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=>sortByDate()} scope=\"col\">\r\n                        Date {isOrdered.date ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n                        </th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=>sortByTransferredTo()} scope=\"col\">\r\n                        To {isOrdered.latestTransferTo ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n                        </th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=>sortByTransferredAmount()} scope=\"col\">\r\n                        Transfer Amt. {isOrdered.latestTransferAmount ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n                        </th>\r\n                        <th style={{cursor: \"pointer\"}} onClick={()=>sortByCurrentBalance()} scope=\"col\">\r\n                        Bal. {isOrdered.currentBalance ? <ArrowSortedDownIcon/> : <ArrowSortedUpIcon/>}\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {!isUser ?\r\n                    transfersHistories.map((user, index) => {\r\n                        return (\r\n                            <Fade up duration={index>10 ? 1000: `${index}00`}>\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{index+1}</th>\r\n                                <td>{user.account_no}</td>\r\n                                <td>{user.first_name + \" \" + user.last_name}</td>\r\n                                <td>{user.currentDatenTime}</td>\r\n                                <td>{user.latestTransferTo}</td>\r\n                                <td>{convertToMoney(user.latestTransferAmount)}</td>\r\n                                <td>{convertToMoney(user.balance)}</td>\r\n                            </tr>\r\n                            </Fade>\r\n                        )\r\n                    })\r\n                    :\r\n                    filteredHistory.map((user, index) => {\r\n                        return (\r\n                            <Fade up duration={index>10 ? 1000: `${index}00`}>\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{index+1}</th>\r\n                                <td>{user.account_no}</td>\r\n                                <td>{user.first_name + \" \" + user.last_name}</td>\r\n                                <td>{user.currentDatenTime}</td>\r\n                                <td>{user.latestTransferTo}</td>\r\n                                <td>{convertToMoney(user.latestTransferAmount)}</td>\r\n                                <td>{convertToMoney(user.balance)}</td>\r\n                            </tr>\r\n                            </Fade>\r\n                        )\r\n                    })\r\n                }\r\n                   \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","export default __webpack_public_path__ + \"static/media/blg.286e4803.png\";","export default __webpack_public_path__ + \"static/media/blank_image.07300db7.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LinkComponent = ({\r\n  selected,\r\n  handleSelectedMenu,\r\n  Icon,\r\n  path,\r\n  index,\r\n  description,\r\n  hasSpan,  \r\n}) => {\r\n  return (\r\n    <>\r\n      <Link\r\n        to={path}\r\n        className={`nav-link ${selected === index ? \"active\" : \"\"} link-dark`}\r\n        onClick={() => handleSelectedMenu(index)}\r\n        // style={{color: \"#000\"}}\r\n      >\r\n        {hasSpan ? null : description}\r\n        {hasSpan && (\r\n          <>\r\n            <span className=\"menus\">{Icon && <Icon />}</span>\r\n            {description}\r\n          </>\r\n        )}\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LinkComponent;\r\n","import React from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport bankLogo from '../../assets/blg.png'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoginModalComponent = ({modalShow,setModalShow, loginAccount, LogIn, usernameInput, setUsernameInput, passwordInput, setPasswordInput, handleCheckUser, passwordState, handleShowPassword, handleHidePassword}) => {\r\n    \r\n    return (\r\n        <div className=\"login-modal-main-container\">\r\n            <Modal\r\n                show={modalShow}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                dialogClassName=\"login-modal-main-container\"\r\n            >\r\n            <Modal.Header>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\" className=\"login-modal-title-container\">\r\n                    <span className=\"fs-4 login-bank-logo\"><img src={bankLogo} style={{width: '50%'}} alt=\"Bank Logo\"/></span>\r\n                    <h6 className=\"modal-title log-in-account-title\" id=\"exampleModalLiveLabel\"><LogIn/>Login to your account</h6>\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"account-row input-group mb-3\">\r\n                    <span>Username</span>\r\n                    <input type=\"text\" className=\"login form-control\" placeholder=\"Username\" onChange={(e) => setUsernameInput(e.target.value)} value={usernameInput}/>\r\n                </div>\r\n                \r\n                <div class=\"form-group\">\r\n                    <label>Password</label>\r\n                    <div class=\"input-group\" id=\"show_hide_password\">\r\n                        <input placeholder=\"Password\" class=\"form-control\" type={passwordState.password? 'text':\"password\"} onChange={(e) => setPasswordInput(e.target.value)} value={passwordInput}/>\r\n                        <div class=\"input-group-addon\" onMouseDown={() => handleShowPassword(true)} onMouseUp={() => handleHidePassword(false)}>\r\n                        {!passwordState.password? <i class=\"fa fa-eye-slash\" aria-hidden=\"true\"></i>:\r\n                            <i class=\"fa fa-eye\" aria-hidden=\"true\" ></i>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Link to=\"/\"> \r\n                    <Button onClick={() => handleCheckUser()}>Login</Button>\r\n                </Link>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginModalComponent\r\n","import React from 'react'\r\n\r\n\r\nconst UserSectionComponent = ({loginAccount, handleSelectedMenu, handleLogout, defaultProfPic, Link}) => {    \r\n    return (\r\n        <>\r\n             <div className=\"dropdown\" style={{zIndex: \"100\"}}>\r\n                    <a href=\"google.com\" className=\"d-flex align-items-center link-dark text-decoration-none dropdown-toggle\" id=\"dropdownUser2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <img src={loginAccount[0].thumbnail_url || defaultProfPic || '/static/media/blank_image.07300db7.png'} alt=\"\" width=\"32\" height=\"32\" className=\"rounded-circle me-2\"/>\r\n                        <strong>{loginAccount[0].first_name}</strong>\r\n                    </a>\r\n                    <ul className=\"dropdown-menu text-small shadow\" aria-labelledby=\"dropdownUser2\">\r\n                        <Link to=\"/profile\"><li><p className=\"dropdown-item\" onClick={() => handleSelectedMenu()}>Profile</p></li></Link>\r\n                        <li><hr className=\"dropdown-divider\"/></li>\r\n                        <li><div className=\"dropdown-item\" onClick={() => handleLogout()}>Sign out</div></li>\r\n                    </ul>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserSectionComponent\r\n","import React from 'react'\r\n\r\nconst ButtonComponent = ({btnClass, dbsToggle, dbsTarget, dbsDismiss, handleFunction, iconName, ariaLabel, btnDescription, resetTransaction}) => {\r\n    \r\n    return (\r\n        <>\r\n            <button type=\"button\" className={btnClass} data-bs-dismiss={dbsDismiss} data-bs-toggle={dbsToggle} data-bs-target={dbsTarget} onClick={resetTransaction? resetTransaction : handleFunction} aria-label={ariaLabel}> {iconName ? iconName : null} {btnDescription}</button>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ButtonComponent","import React from \"react\";\r\n\r\nfunction InputComponent({\r\n  inputType,\r\n  inputClass,\r\n  inputID,\r\n  placeholderTitle,\r\n  handleOnChange,\r\n  inputValue,\r\n  label,\r\n  isReadOnly,\r\n  isPattern,\r\n  dbsDismiss,\r\n  errorMessage,\r\n  isError,\r\n}) {\r\n  return (\r\n    <>\r\n      <input\r\n        style={{border: isError && `red 2px solid`}}\r\n        type={inputType}\r\n        className={inputClass}\r\n        id={inputID}\r\n        placeholder={placeholderTitle}\r\n        readOnly={isReadOnly && true}\r\n        onChange={(e) => handleOnChange(e.target.value)}\r\n        value={inputValue}\r\n        pattern={isPattern && \"(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}\"}\r\n        title={isPattern && `Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters`}\r\n        data-bs-dismiss={dbsDismiss}\r\n        // required      \r\n      />\r\n      {label ? <label>{label}</label> : \"\"}\r\n      {errorMessage && errorMessage}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InputComponent;\r\n","import { useState, useContext } from 'react'\r\nimport {AppContext} from '../Global/AppContext'\r\nimport useLocalStorage from '../Users/useLocalStorage'\r\nimport {convertToMoney} from '../lib/helpers'\r\nimport useSessionStorage from '../Layout/useSessionStorage'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\n\r\n\r\nconst useHooks = () => {\r\n    const {withdrawalHistories,\r\n        depositHistories,\r\n        transfersHistories,\r\n        setWithdrawalHistories,\r\n        setDepositHistories,\r\n        setTransfersHistories} = useContext(AppContext)\r\n\r\n    const matchesXL = useMediaQuery('(min-width: 1240px)')\r\n    const [users, setUsers] = useLocalStorage('usersData', [])\r\n    const [loginAccount, setLoginAccount] = useSessionStorage('loginAccount', []);\r\n    const [currentSelectedData, setCurrentSelectedData] = useState(loginAccount[0])\r\n    const [accountNo, setAccountNo] = useState('')\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [retypePassword, setRetypePassword] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [mobileNo, setMobileNo] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [balance, setBalance] = useState('');\r\n    const [amountToWithdraw, setAmountToWithdraw] = useState('')\r\n    const [amountToDeposit, setAmountToDeposit] = useState('')\r\n    const [transferTo, setTransferTo] = useState('')\r\n    const [transferMessage, setTransferMessage] = useState({})    \r\n    const [withdrawMessage, setwithdrawMessage] = useState('')\r\n    const [depositMessage, setDepositMessage] = useState('')    \r\n    const [amountToTransfer, setAmountToTransfer] = useState('')\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalDetailsAlert, setModalDetailsAlert] = useState({\r\n        insufficientBalance: false,\r\n        successful: false,\r\n        enterAnAmountToWithdraw: false,\r\n        successfulDeposit: false,\r\n        enterAnAmountToDeposit: false,\r\n        insufficientBalanceTransfer: false,\r\n        successfulTransfer: false,\r\n        enterAnAmountToTransfer: false,\r\n        sameAccountNumber: false,\r\n        accountNumberNotValidTransfer: false,\r\n        accountNumberCannotBeBlank: false,\r\n        amountEnteredIsNegative: false,\r\n        amountEnteredIsNegativeWithdraw: false,\r\n        amountEnteredIsNegativeDeposit: false,\r\n    });\r\n    const [errorState, setErrorState] = useState({\r\n        username: false,\r\n        password: false,\r\n        retypePassword: false,\r\n        firstName: false,\r\n        lastName: false,\r\n        address: false,\r\n        mobileNo: false,\r\n        email: false\r\n    })\r\n    \r\n\r\n    const closeModalComponent = () => {\r\n        setModalShow(false)\r\n        setErrorState({\r\n            username: false,\r\n            password: false,\r\n            retypePassword: false,\r\n            firstName: false,\r\n            lastName: false,\r\n            address: false,\r\n            mobileNo: false,\r\n            email: false\r\n        })\r\n    }\r\n\r\n    \r\n\r\n\r\n    // Selecting the login account\r\n    let userSelected = users.find((user) => {return user.account_no === currentSelectedData.account_no})\r\n\r\n    // Histories for user side\r\n    const handleHistories = (action) => {\r\n        const newHistory = {\r\n                account_no: userSelected.account_no,\r\n                username: userSelected.username, \r\n                first_name: userSelected.first_name,\r\n                last_name: userSelected.last_name,\r\n                address: userSelected.address,\r\n                mobile_no: userSelected.mobile_no,\r\n                email: userSelected.email,\r\n                balance: userSelected.balance,\r\n                latestWithdrawnAmount: userSelected.latestWithdrawnAmount,\r\n                latestDepositAmount: userSelected.latestDepositAmount,\r\n                latestTransferAmount: userSelected.latestTransferAmount,\r\n                latestTransferTo: userSelected.latestTransferTo,\r\n                currentDatenTime: new Date().toLocaleTimeString([], {year: 'numeric', month: 'numeric', day: 'numeric', hour: '2-digit', minute: '2-digit'})\r\n        }\r\n        if(action === 'withdraw') {\r\n            setWithdrawalHistories([...withdrawalHistories, newHistory])\r\n        }\r\n        else if (action === 'deposit') {\r\n            setDepositHistories([...depositHistories, newHistory])\r\n        } else if (action === 'transfer') {\r\n            setTransfersHistories([...transfersHistories, newHistory])\r\n        }\r\n    }\r\n\r\n    // \r\n    const handleWithdraw = () => {\r\n        if(amountToWithdraw < 0){\r\n            setModalDetailsAlert({amountEnteredIsNegativeWithdraw: true,})                        \r\n        }\r\n        else if(amountToWithdraw > 0) {\r\n            if(amountToWithdraw <= userSelected.balance) {                \r\n                let currentBalance = userSelected.balance - amountToWithdraw;\r\n                setUsers([...users], userSelected.balance = currentBalance, userSelected.latestWithdrawnAmount = amountToWithdraw)\r\n                handleHistories('withdraw');                \r\n                setModalDetailsAlert({successful: true})\r\n                setwithdrawMessage(amountToWithdraw)                \r\n                setAmountToWithdraw('')\r\n            } else {\r\n                setModalDetailsAlert({insufficientBalance: true})\r\n            }\r\n        } else {\r\n            setModalDetailsAlert({enterAnAmountToWithdraw: true})\r\n        }\r\n    }\r\n\r\n    // \r\n    const handleDeposit = () => {\r\n        if(amountToDeposit < 0){\r\n            setModalDetailsAlert({amountEnteredIsNegativeDeposit: true,})\r\n        }\r\n        else if(amountToDeposit > 0) {\r\n            let currentBalance = (+userSelected.balance) + (+amountToDeposit);\r\n            setUsers([...users], userSelected.balance = currentBalance, userSelected.latestDepositAmount = amountToDeposit)\r\n            handleHistories('deposit');\r\n            setDepositMessage(amountToDeposit)\r\n            setAmountToDeposit('')            \r\n            setModalDetailsAlert({successfulDeposit: true})\r\n        } else {\r\n            setModalDetailsAlert({enterAnAmountToDeposit: true})\r\n        }\r\n    }   \r\n\r\n    // Transferring amount to another user - user side\r\n    const handleTransfer = () => {\r\n        if(transferTo){\r\n            const toUser = users.find(user => {return user.account_no === transferTo})                    \r\n            if(toUser) {                \r\n                if(toUser.account_no !== userSelected.account_no) {\r\n                    if(amountToTransfer < 0){\r\n                        setModalDetailsAlert({amountEnteredIsNegative: true})                                              \r\n                    } \r\n                    else if(amountToTransfer > 0) {\r\n                        if(amountToTransfer <= userSelected.balance) {\r\n                            let currentBalance = (+userSelected.balance) - (+amountToTransfer)\r\n                            let toUserCurrentBalance = (+toUser.balance) + (+amountToTransfer);\r\n                            setUsers([...users], \r\n                                userSelected.balance = currentBalance, \r\n                                userSelected.latestTransferAmount = amountToTransfer, \r\n                                userSelected.latestTransferTo = transferTo,\r\n                                toUser.balance = toUserCurrentBalance)\r\n                            handleHistories('transfer');\r\n                            setTransferMessage({transferAmount: amountToTransfer, accountNo: transferTo, firstName: toUser.first_name, lastName: toUser.last_name})\r\n                            setTransferTo('')\r\n                            setAmountToTransfer('')\r\n                            setModalDetailsAlert({successfulTransfer: true})\r\n                        } else {\r\n                            setModalDetailsAlert({insufficientBalanceTransfer: true})\r\n                        }\r\n                    } \r\n                    else {\r\n                        setModalDetailsAlert({enterAnAmountToTransfer: true})\r\n                    }\r\n                    \r\n                } else {\r\n                    setModalDetailsAlert({sameAccountNumber: true})\r\n                }\r\n            } else {\r\n                setModalDetailsAlert({accountNumberNotValidTransfer: true})\r\n            }\r\n        } else {\r\n            setModalDetailsAlert({accountNumberCannotBeBlank: true})\r\n        }     \r\n    }\r\n\r\n    // \r\n    const resetTransaction = () => {\r\n        setAmountToWithdraw('')\r\n        setAmountToDeposit('')\r\n        setAmountToTransfer('')\r\n        setTransferTo('')\r\n        setTransferMessage({})\r\n        setModalDetailsAlert({\r\n            insufficientBalance: false,\r\n            successful: false,\r\n            enterAnAmountToWithdraw: false,\r\n            successfulDeposit: false,\r\n            enterAnAmountToDeposit: false,\r\n            insufficientBalanceTransfer: false,\r\n            successfulTransfer: false,\r\n            enterAnAmountToTransfer: false,\r\n            sameAccountNumber: false,\r\n            accountNumberNotValidTransfer: false,\r\n            accountNumberCannotBeBlank: false,\r\n            amountEnteredIsNegative: false,\r\n            amountEnteredIsNegativeWithdraw: false,\r\n            amountEnteredIsNegativeDeposit: false,            \r\n        });\r\n    }\r\n\r\n    return {        \r\n        users, \r\n        setUsers, \r\n        accountNo, \r\n        setAccountNo, \r\n        userName, \r\n        setUserName, \r\n        password, \r\n        setPassword, \r\n        retypePassword, \r\n        setRetypePassword, \r\n        firstName, \r\n        setFirstName, \r\n        lastName, \r\n        setLastName, \r\n        address, \r\n        setAddress, \r\n        mobileNo, \r\n        setMobileNo, \r\n        email, \r\n        setEmail, \r\n        balance, \r\n        setBalance, \r\n        amountToWithdraw, \r\n        setAmountToWithdraw, \r\n        amountToDeposit, \r\n        setAmountToDeposit, \r\n        transferTo, \r\n        setTransferTo,\r\n        transferMessage,\r\n        amountToTransfer, \r\n        setAmountToTransfer,\r\n        handleWithdraw,\r\n        handleDeposit,\r\n        handleTransfer,\r\n        errorState,\r\n        setErrorState,\r\n        convertToMoney,\r\n        modalDetailsAlert,\r\n        resetTransaction,\r\n        setModalShow,\r\n        modalShow,\r\n        closeModalComponent,\r\n        loginAccount,\r\n        userSelected,\r\n        matchesXL,\r\n        withdrawMessage,\r\n        depositMessage\r\n\r\n    }\r\n}\r\n\r\nexport default useHooks\r\n","import React from 'react'\r\nimport ButtonComponent from './ButtonComponent'\r\nimport InputComponent from './InputComponent'\r\nimport { convertToMoney } from '../lib/helpers'\r\nimport useHooks from './hooks'\r\nimport './style.css'\r\n\r\n\r\nconst Index = ()  => {  \r\n    const {      \r\n      amountToWithdraw, \r\n      setAmountToWithdraw, \r\n      amountToDeposit, \r\n      setAmountToDeposit, \r\n      transferTo, \r\n      setTransferTo,\r\n      transferMessage,\r\n      amountToTransfer, \r\n      setAmountToTransfer,     \r\n      handleWithdraw,\r\n      handleDeposit,\r\n      handleTransfer,           \r\n      modalDetailsAlert,      \r\n      userSelected,\r\n      matchesXL,\r\n      withdrawMessage,\r\n      depositMessage,\r\n    } = useHooks()\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">                \r\n                    <div>\r\n                    <div className=\"modal-header\">                    \r\n                    <div className=\"col-12 col-lg-6\"><h5 className=\"modal-title\" id=\"exampleModalLabel\">User Information</h5></div>\r\n                    {matchesXL && <div className=\"col-6\"><h5 className=\"modal-title\">Transfer Funds</h5></div>}\r\n                    </div>                                        \r\n                <div className=\"flex-container\">                \r\n                    <div className=\"modal-body\">\r\n                        <div className=\"user-row\">\r\n                            <div className=\"form-floating mb-3\">\r\n                            <InputComponent\r\n                             inputType={\"text\"}\r\n                             inputClass={\"read-only-user-detail form-control\"}\r\n                             placeholderTitle={\"Account No.\"}\r\n                             inputID={\"floatingAccountNumberDetails\"}\r\n                             isReadOnly={true}\r\n                             inputValue={userSelected.account_no}\r\n                             label={\"Account No.\"}\r\n                            />\r\n                            </div>\r\n                            <div className=\"form-floating mb-3\">\r\n                            <InputComponent\r\n                             inputType={\"text\"}\r\n                             inputClass={\"read-only-user-detail form-control\"}\r\n                             placeholderTitle={\"User Name\"}\r\n                             inputID={\"floatingUserNameDetails\"}\r\n                             isReadOnly={true}\r\n                             inputValue={userSelected.username}\r\n                             label={\"User Name\"}\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-row\">\r\n                            <div className=\"form-floating mb-3\">\r\n                                <InputComponent\r\n                                 inputType={\"text\"}\r\n                                 inputClass={\"read-only-user-detail form-control\"}\r\n                                 placeholderTitle={\"First Name\"}\r\n                                 inputID={\"floatingFirstNameDetails\"}\r\n                                 isReadOnly={true}\r\n                                 inputValue={userSelected.first_name}\r\n                                 label={\"First Name\"}\r\n                                 />\r\n                            </div>\r\n                            <div className=\"form-floating mb-3\">\r\n                                <InputComponent\r\n                                 inputType={\"text\"}\r\n                                 inputClass={\"read-only-user-detail form-control\"}\r\n                                 placeholderTitle={\"Last Name\"}\r\n                                 inputID={\"floatingLastNameDetails\"}\r\n                                 isReadOnly={true}\r\n                                 inputValue={userSelected.last_name}\r\n                                 label={\"Last Name\"}\r\n                                 />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-row\">\r\n                            <div className=\"form-floating mb-3\">\r\n                                <InputComponent\r\n                                 inputType={\"text\"}\r\n                                 inputClass={\"read-only-user-detail form-control\"}\r\n                                 placeholderTitle={\"Address\"}\r\n                                 inputID={\"floatingAddressDetails\"}\r\n                                 isReadOnly={true}\r\n                                 inputValue={userSelected.address}\r\n                                 label={\"Address\"}\r\n                                 />\r\n                            </div>\r\n                            <div className=\"form-floating mb-3\">\r\n                                <InputComponent\r\n                                inputType={\"number\"}\r\n                                inputClass={\"read-only-user-detail form-control\"}\r\n                                placeholderTitle={\"Mobile No.\"}\r\n                                inputID={\"floatingActiveNoDetails\"}\r\n                                isReadOnly={true}\r\n                                inputValue={userSelected.mobile_no}\r\n                                label={\"Mobile No.\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-row\">\r\n                            <div className=\"form-floating mb-3\">\r\n                                <InputComponent\r\n                                inputType={\"email\"}\r\n                                inputClass={\"read-only-user-detail form-control\"}\r\n                                placeholderTitle={\"Email Address\"}\r\n                                inputID={\"floatingEmailDetails\"}\r\n                                isReadOnly={true}\r\n                                inputValue={userSelected.email}\r\n                                label={\"Email Address\"}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-floating mb-3\">\r\n                                <InputComponent\r\n                                inputType={\"text\"}\r\n                                inputClass={\"read-only-user-detail form-control\"}\r\n                                placeholderTitle={\"Balance\"}\r\n                                inputID={\"floatingBalanceDetails\"}\r\n                                isReadOnly={true}\r\n                                inputValue={convertToMoney(userSelected.balance)}\r\n                                label={\"Balance\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-md-12 user-transaction-section\">                        \r\n                            {!matchesXL && <h5 className=\"modal-title\">Transfer Funds</h5>}\r\n                        <div>\r\n                            \r\n                            {/* <div className=\"transaction-body user-row\">\r\n                                <div className=\"transaction form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"number\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingWithdraw\"}\r\n                                        placeholderTitle={\"Withdraw\"}\r\n                                        handleOnChange={setAmountToWithdraw}\r\n                                        inputValue={amountToWithdraw}\r\n                                        label={\"₱ Amount to Withdraw\"} \r\n                                        // errorMessage={modalDetailsAlert.insufficientBalance && <p className=\"error-message\">You have an Insufficient Balance. Please Try Again!</p>}\r\n                                        // successfulMessage={modalDetailsAlert.successful && <p className=\"success-message\">Withdrawn Successfully!</p>}\r\n                                        // enterAnAmountToWithdraw={modalDetailsAlert.enterAnAmountToWithdraw && <p className=\"enter-an-amount-message\">Please enter an Amount to Withdraw</p>}\r\n                                    />\r\n                                </div>                                \r\n                                <ButtonComponent\r\n                                    btnClass={\"btn btn-primary\"}                                   \r\n                                    handleFunction={() => handleWithdraw()}\r\n                                    btnDescription={\"Withdraw\"}\r\n                                />\r\n                            </div>\r\n\r\n                            <div style={{marginBottom: '1rem'}}>\r\n                                {modalDetailsAlert.insufficientBalance && <p className=\"error-message\">You have an Insufficient Balance. Please Try Again!</p>}\r\n                                {modalDetailsAlert.successful && <p className=\"success-message\">Withdrawn {convertToMoney(withdrawMessage)} Successfully!</p>}\r\n                                {modalDetailsAlert.enterAnAmountToWithdraw && <p className=\"enter-an-amount-message\">Please enter an Amount to Withdraw</p>}\r\n                                {modalDetailsAlert.amountEnteredIsNegativeWithdraw && <p className=\"error-message\">Amount withdrawn cannot be negative.</p>}                                \r\n                            </div> */}\r\n\r\n                            {/* <div className=\"transaction-body user-row\">\r\n                                <div className=\"transaction form-floating mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"number\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingDeposit\"}\r\n                                        placeholderTitle={\"Deposit\"}\r\n                                        handleOnChange={setAmountToDeposit}\r\n                                        inputValue={amountToDeposit}\r\n                                        label={\"₱ Amount to Deposit\"}\r\n                                    />\r\n                                </div>\r\n                                \r\n                                <ButtonComponent\r\n                                    btnClass={\"btn btn-primary\"}\r\n                                    handleFunction={() => handleDeposit()}\r\n                                    btnDescription={\"Deposit\"}\r\n                                />\r\n                            </div> */}\r\n\r\n                            {/* <div style={{marginBottom: '1rem'}}>\r\n                                {modalDetailsAlert.successfulDeposit && <p className=\"success-message\">Deposited {convertToMoney(depositMessage)} Successfully!</p>}\r\n                                {modalDetailsAlert.enterAnAmountToDeposit && <p className=\"enter-an-amount-message\">Please enter an Amount to Deposit</p>}\r\n                                {modalDetailsAlert.amountEnteredIsNegativeDeposit && <p className=\"error-message\">Amount deposited cannot be negative.</p>}\r\n                            </div> */}\r\n                            {/* <h6 className=\"modal-title\" >Transfer Funds</h6> */}\r\n                            \r\n                            <p>To:</p>\r\n                            <div className=\"transaction-body user-row\">\r\n                                <div className=\"transaction form mb-3\">\r\n                                    <InputComponent\r\n                                        inputType={\"text\"}\r\n                                        inputClass={\"transfer-names form-control\"}\r\n                                        inputID={\"floatingTransferTo\"}\r\n                                        placeholderTitle={\"Account No.\"}\r\n                                        handleOnChange={setTransferTo}\r\n                                        inputValue={transferTo}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <p>Amount:</p>\r\n                            <div className=\"transaction-body user-row\">\r\n                                <div className=\"transaction form-floating mb-3\">                                                                \r\n                                    <InputComponent \r\n                                        inputType={\"number\"}\r\n                                        inputClass={\"form-control\"}\r\n                                        inputID={\"floatingTransfer\"}\r\n                                        placeholderTitle={\"Transfer\"}\r\n                                        inputValue={amountToTransfer}\r\n                                        handleOnChange={setAmountToTransfer}                                        \r\n                                        isLabel={true}\r\n                                        label={`Amount to Transfer`}\r\n                                    />                                    \r\n                                </div>\r\n                                \r\n                                <ButtonComponent\r\n                                    btnClass={\"btn btn-primary\"}\r\n                                    handleFunction={() => handleTransfer()}\r\n                                    btnDescription={\"Transfer\"}\r\n                                />\r\n                            </div>\r\n                            <div style={{marginBottom: '1rem'}}>\r\n                                {modalDetailsAlert.amountEnteredIsNegative && <p className=\"error-message\">Amount entered cannot be negative.</p>}\r\n                                {modalDetailsAlert.insufficientBalanceTransfer && <p className=\"error-message\">You have an Insufficient Balance. Please Try Again.</p>}\r\n                                {modalDetailsAlert.successfulTransfer && <p className=\"success-message\">You have successfully transferred {convertToMoney(transferMessage.transferAmount)} to {transferMessage.firstName} {transferMessage.lastName} with the Account# {transferMessage.accountNo}.</p>}\r\n                                {modalDetailsAlert.enterAnAmountToTransfer && <p className=\"enter-an-amount-message\">Please enter an amount to transfer.</p>}\r\n                                {modalDetailsAlert.sameAccountNumber &&  <p className=\"enter-an-amount-message\">Invalid Action. You cannot send amount to the same Account #. Please Try Again.</p>}\r\n                                {modalDetailsAlert.accountNumberNotValidTransfer && <p className=\"error-message\">Account# is not valid. Please Try Again.</p>}                      \r\n                                {modalDetailsAlert.accountNumberCannotBeBlank && <p className=\"error-message\">Account# to transfer to cannot be blank. Please Try Again. </p>}\r\n                            </div>\r\n                        </div>                   \r\n                    </div>\r\n                </div>                \r\n            </div>\r\n         </div>            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import React from 'react'\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,     \r\n    Route,\r\n} from 'react-router-dom';\r\nimport './style.css'\r\nimport {\r\n    OutlineHome,\r\n    OutlineDashboard,\r\n    UsersIcon,\r\n    LogIn,\r\n    TransactionIcon,\r\n    Calculator\r\n} from './components'\r\nimport HomeComponent from '../Home'\r\nimport UsersComponent from '../Users'\r\nimport Withdrawals from '../Dashboard/Withdrawals'\r\nimport Deposits from '../Dashboard/Deposits'\r\nimport Transfers from '../Dashboard/Transfers'\r\nimport Profile from '../Profile';\r\nimport bankLogo from '../../assets/blg.png'\r\nimport defaultProfPic from '../../assets/blank_image.png'\r\nimport useHooks from './hooks'\r\nimport LinkComponent from './LinkComponent';\r\nimport LoginModalComponent from './LoginComponent';\r\nimport UserSectionComponent from './UserSectionComponent';\r\nimport TransactionComponent from '../Transaction'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n// React Bootstrap\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\n\r\n\r\n\r\nconst Index = () => {\r\n    const {\r\n        usernameInput,\r\n        setUsernameInput,\r\n        passwordInput,\r\n        setPasswordInput,\r\n        selected,\r\n        isAdmin,\r\n        loginAccount,\r\n        setLoginAccount,\r\n        admin,\r\n        setAdmin,\r\n        historiesSelected,\r\n        handleSelectedMenu,\r\n        handleCheckUser,\r\n        handleLogout,\r\n        matchesMD,\r\n        users,\r\n        setUsers,\r\n        isUser,\r\n        passwordState,\r\n        handleShowPassword,\r\n        handleHidePassword,\r\n        setSelected,\r\n        modalShow,\r\n        setModalShow   \r\n    } = useHooks();\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n            {loginAccount[0] ?\r\n                matchesMD ?\r\n            <div className=\"side-bar d-flex flex-column flex-shrink-0 p-3 bg-light\" styled={{width: '280px'}}>\r\n            <Link to={\"/\"}>\r\n                <a href=\"/\" onClick={() => handleSelectedMenu(0)} className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none\">\r\n                    <span className=\"fs-4\"><img src={bankLogo} style={{width: '50%'}} alt=\"Bank Logo\"/></span>\r\n                </a></Link>\r\n                <hr/>\r\n                <ul className=\"nav nav-pills flex-column mb-auto\">\r\n                    <li className=\"nav-item\">                        \r\n                        <LinkComponent\r\n                        selected={selected}\r\n                        handleSelectedMenu={handleSelectedMenu}\r\n                        Icon={OutlineHome}\r\n                        path={\"/\"}\r\n                        index={0}\r\n                        description={\"Home\"}\r\n                        hasSpan={true}                            \r\n                        />\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"accordion-item\">\r\n                            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                                <button className={`accordion-button ${historiesSelected? `` : `collapsed`}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded={historiesSelected? 'true' : 'false'} aria-controls=\"collapseTwo\" style={{pointerEvents: historiesSelected? `none` : ``}}>\r\n                                    <span className=\"menus\"><OutlineDashboard /></span>Dashboard\r\n                                </button>\r\n                            </h2>\r\n                            <div id=\"collapseTwo\" className={`accordion-collapse collapse ${historiesSelected? `show` : ``}`} aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                                <div className=\"accordion-body\">\r\n                                    <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">                                   \r\n                                        <li className=\"dashboard-list\">\r\n                                        \r\n                                        <LinkComponent\r\n                                            selected={selected}\r\n                                            path={\"/dashboard/withdrawals\"}\r\n                                            handleSelectedMenu={handleSelectedMenu}\r\n                                            index={1}\r\n                                            description={\"Withdrawals History\"}\r\n                                        />\r\n                                        </li>                                                                      \r\n                                        <li className=\"dashboard-list\">\r\n                                       \r\n                                        <LinkComponent\r\n                                            path={\"/dashboard/deposits\"}\r\n                                            handleSelectedMenu={handleSelectedMenu}\r\n                                            selected={selected}\r\n                                            index={2}\r\n                                            description={\"Deposits History\"}\r\n                                        />\r\n                                        </li>                                        \r\n                                        <li className=\"dashboard-list\">\r\n                                        \r\n                                        <LinkComponent\r\n                                            path={\"/dashboard/transfers\"}\r\n                                            handleSelectedMenu={handleSelectedMenu}\r\n                                            selected={selected}\r\n                                            index={3}\r\n                                            description={\"Transfers History\"}\r\n                                        />\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    {isAdmin && \r\n                        <li>          \r\n                            <LinkComponent\r\n                                path={\"/users\"}\r\n                                handleSelectedMenu={handleSelectedMenu}\r\n                                selected={selected}\r\n                                index={4}\r\n                                hasSpan={true}\r\n                                Icon={UsersIcon}\r\n                                description={\"Users\"}\r\n                            />\r\n                        </li> \r\n                    }\r\n                    {isUser && \r\n                        <>\r\n                            <li>          \r\n                                <LinkComponent\r\n                                    path={\"/transactions\"}\r\n                                    handleSelectedMenu={handleSelectedMenu}\r\n                                    selected={selected}\r\n                                    index={5}\r\n                                    hasSpan={true}\r\n                                    Icon={TransactionIcon}\r\n                                    description={\"Transactions\"}\r\n                                />\r\n                            </li>\r\n                            {/* <li>          \r\n                                <LinkComponent\r\n                                    path={\"/budget\"}\r\n                                    handleSelectedMenu={handleSelectedMenu}\r\n                                    selected={selected}\r\n                                    index={6}\r\n                                    hasSpan={true}\r\n                                    Icon={StatisticsIcon}\r\n                                    description={\"Budget\"}\r\n                                />\r\n                            </li> */}\r\n                        </>\r\n                    }\r\n                </ul>\r\n                <hr/>\r\n                \r\n                {loginAccount.length === 1 ? <UserSectionComponent\r\n                    loginAccount={loginAccount}\r\n                    handleSelectedMenu={handleSelectedMenu}\r\n                    handleLogout={handleLogout}\r\n                    defaultProfPic={defaultProfPic}\r\n                    Link={Link}\r\n                /> : ''}\r\n        </div>\r\n         : \r\n         <>\r\n        <Navbar bg=\"light\" expand=\"lg\" style={{zIndex: \"100\"}}>\r\n            <Container>\r\n                <Navbar.Brand href=\"/\">\r\n                    <a href=\"/\" onClick={() => handleSelectedMenu(0)} className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none\">\r\n                        <span className=\"fs-4\"><img src={bankLogo} style={{width: '50%'}} alt=\"Bank Logo\"/></span>\r\n                    </a>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"me-auto\">\r\n                    <Nav.Link className={`${selected === 0 ? 'mobile-menus' : ''}`} onClick={() => handleSelectedMenu(0)}><Link to=\"/\" className={`${selected === 0 ? 'mobile-menus' : ''} mobile-links`}>🏠Home</Link></Nav.Link>\r\n                    <NavDropdown title={`⏲️Dashboard`} id=\"basic-nav-dropdown\">\r\n\r\n                    <NavDropdown.Item className={`${selected === 1 ? 'mobile-menus' : ''}`} onClick={() => handleSelectedMenu(1)}><Link to=\"/dashboard/withdrawals\" className={`${selected === 1 ? 'mobile-menus' : ''} `}><div className='mobile-links'>Withdrawals</div></Link></NavDropdown.Item>\r\n                    <NavDropdown.Item className={`${selected === 2 ? 'mobile-menus' : ''}`} onClick={() => handleSelectedMenu(2)}><Link to=\"/dashboard/deposits\" className={`${selected === 2 ? 'mobile-menus' : ''}`}><div className='mobile-links'>Deposits</div></Link></NavDropdown.Item>\r\n                    <NavDropdown.Item className={`${selected === 3 ? 'mobile-menus' : ''}`} onClick={() => handleSelectedMenu(3)}><Link to=\"/dashboard/transfers\" className={`${selected === 3 ? 'mobile-menus' : ''}`}><div className='mobile-links'>Transfers</div></Link></NavDropdown.Item>\r\n                    \r\n                    </NavDropdown>\r\n\r\n                    {isAdmin &&  <Nav.Link className={`${selected === 4 ? 'mobile-menus' : ''}`} onClick={() => handleSelectedMenu(4)}><Link to=\"/users\" className={`${selected === 4 ? 'mobile-menus' : ''} mobile-links`}>🧘Users</Link></Nav.Link>}\r\n                    {isUser &&  <Nav.Link className={`${selected === 5 ? 'mobile-menus' : ''}`} onClick={() => handleSelectedMenu(5)}><Link to=\"/transactions\" className={`${selected === 5 ? 'mobile-menus' : ''} mobile-links`}><TransactionIcon />Transactions</Link></Nav.Link>}\r\n                    {/* {isUser &&  <Nav.Link className={`${selected === 6 ? 'mobile-menus' : ''}`} onClick={() => handleSelectedMenu(6)}><Link to=\"/budget\" className={`${selected === 6 ? 'mobile-menus' : ''} mobile-links`}><TransactionIcon />Budget</Link></Nav.Link>} */}\r\n\r\n\r\n                    <NavDropdown.Divider />\r\n                    {loginAccount.length === 1 ? \r\n                        <UserSectionComponent\r\n                            loginAccount={loginAccount}\r\n                            handleSelectedMenu={handleSelectedMenu}\r\n                            handleLogout={handleLogout}\r\n                            Link={Link} \r\n                        />\r\n                    : ''}\r\n                </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n\r\n        </Navbar>\r\n        <hr className=\"hr\" />\r\n        </>  \r\n       : '' }\r\n\r\n\r\n\r\n        {loginAccount[0] &&\r\n        <Switch>\r\n            <>\r\n                <div className=\"routes-container\">\r\n                <Route path=\"/\" exact component={HomeComponent}>\r\n                    <HomeComponent\r\n                    setSelected={setSelected}\r\n                    isAdmin={isAdmin}\r\n                     />\r\n                </Route>\r\n            {isAdmin &&\r\n                <Route path=\"/users\" exact  component={UsersComponent}>\r\n                    <UsersComponent />\r\n                </Route>\r\n            }\r\n            {isUser &&\r\n            <>\r\n                <Route path=\"/transactions\" exact  component={TransactionComponent}>\r\n                    <TransactionComponent \r\n                    />\r\n                </Route>\r\n                {/* <Route path=\"/budget-app\" exact  component={BudgetAppComponent}>\r\n                    <BudgetAppComponent \r\n                    />\r\n                </Route> */}\r\n            </>\r\n            }\r\n                <Route path=\"/dashboard/withdrawals\" exact  component={Withdrawals}>\r\n                    <Withdrawals loginAccount={loginAccount} isUser={isUser}/>\r\n                </Route>\r\n                <Route path=\"/dashboard/deposits\" exact  component={Deposits}>\r\n                    <Deposits loginAccount={loginAccount} isUser={isUser}/>\r\n                </Route>\r\n                <Route path=\"/dashboard/transfers\" exact  component={Transfers}>\r\n                    <Transfers loginAccount={loginAccount} isUser={isUser}/>\r\n                </Route>\r\n                <Route path=\"/profile\" exact  component={Profile}>\r\n                    <Profile defaultProfPic={defaultProfPic} loginAccount={loginAccount} setLoginAccount={setLoginAccount} admin={admin} setAdmin={setAdmin} users={users} setUsers={setUsers}/>\r\n                </Route>\r\n                </div>\r\n            </>\r\n        </Switch>\r\n        }\r\n\r\n        \r\n\r\n            {/* Login Modals */}  \r\n            {loginAccount.length === 1 ? '' :\r\n            <LoginModalComponent\r\n                LogIn={LogIn}\r\n                loginAccount={loginAccount}\r\n                usernameInput={usernameInput}\r\n                setUsernameInput={setUsernameInput}\r\n                passwordInput={passwordInput}\r\n                setPasswordInput={setPasswordInput}\r\n                handleCheckUser={handleCheckUser}\r\n                passwordState={passwordState}\r\n                handleShowPassword={handleShowPassword}\r\n                handleHidePassword={handleHidePassword}\r\n                modalShow={modalShow}\r\n                setModalShow={setModalShow}\r\n            /> }     \r\n        </Router>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import './App.css'\r\nimport Layout from './components/Layout';\r\nimport AppProvider from './components/Global/AppContext'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <AppProvider>\r\n        <Layout />\r\n      </AppProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import {useState} from 'react';\r\n\r\n// Hook\r\nfunction useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  export default useLocalStorage;","import {useState} from 'react';\r\n\r\n// Hook\r\nfunction useSessionStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from session storage by key\r\n        const item = window.sessionStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to sessionStorage.\r\n    const setValue = (value) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to session storage\r\n        window.sessionStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  export default useSessionStorage;","import React from 'react'\r\nimport useLocalStorage from '../Users/useLocalStorage'\r\nexport const AppContext = React.createContext();\r\n\r\n\r\nconst AppProvider = (props) => {\r\n    const [withdrawalHistories, setWithdrawalHistories] = useLocalStorage('withdrawalHistories', [])\r\n    const [depositHistories, setDepositHistories] = useLocalStorage('depositHistories', [])\r\n    const [transfersHistories, setTransfersHistories] = useLocalStorage('transfersHistories', [])\r\n\r\n    const state = {\r\n        withdrawalHistories,\r\n        depositHistories,\r\n        transfersHistories\r\n    }\r\n\r\n    const func = {\r\n        setWithdrawalHistories,\r\n        setDepositHistories,\r\n        setTransfersHistories\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={{ ...state, ...func }}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AppProvider;\r\n","import React, {useState} from 'react'\r\nimport './style.css'\r\n\r\nconst Index = (props) => {\r\n    const {setLoginAccount, loginAccount, admin, setAdmin, users, setUsers, defaultProfPic} = props;\r\n\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [retypePassword, setRetypePassword] = useState('')\r\n\r\n\r\n    const handleSaveNewPassword = () => {\r\n        let enPassword = Buffer.from(oldPassword).toString('base64');\r\n        if(loginAccount[0].password === enPassword) {\r\n            if(newPassword){\r\n                if(newPassword === retypePassword) {\r\n                    let enPasswordNewPassword = Buffer.from(newPassword).toString('base64');\r\n                    let enPasswordRetypePassword = Buffer.from(retypePassword).toString('base64');\r\n                    setNewPassword(enPasswordRetypePassword)\r\n                    let findLoginAccount = admin.find((item) => item.id === loginAccount[0].id)\r\n                    let findLoginAccountUsers = users.find((item) => item.account_no === loginAccount[0].account_no)\r\n                    if(findLoginAccount) {\r\n                        setAdmin([...admin], findLoginAccount.password = enPasswordNewPassword)\r\n                        setLoginAccount([...loginAccount], loginAccount[0].password = enPasswordNewPassword)\r\n                        setOldPassword('')\r\n                        setNewPassword('')\r\n                        setRetypePassword('')\r\n                        alert('Password changed succesfully')\r\n                    } \r\n                    else if (findLoginAccountUsers) {\r\n                        setUsers([...users], findLoginAccountUsers.password = enPasswordNewPassword)\r\n                        setLoginAccount([...loginAccount], loginAccount[0].password = enPasswordNewPassword)\r\n                        setOldPassword('')\r\n                        setNewPassword('')\r\n                        setRetypePassword('')\r\n                        alert('Password changed succesfully')\r\n                    }\r\n                } else {\r\n                    alert(`Password did not match`)\r\n                }\r\n            } else {\r\n                alert('Please type a new password.')\r\n            }\r\n        } else {\r\n            alert('Old Password is incorrect')\r\n        }\r\n    }\r\n    \r\n    const [passwordState, setPasswordState] = useState({\r\n        oldPassword: false,\r\n        newPassword: false,\r\n        retypePassword: false,\r\n    })\r\n\r\n    const handleShowPassword = (password, bool) => {\r\n        if(password === 'oldPassword') {\r\n            setPasswordState({oldPassword: bool})\r\n        } else if(password === 'newPassword') {\r\n            setPasswordState({newPassword: bool})\r\n        } else if(password === 'retypePassword') {\r\n            setPasswordState({retypePassword: bool})\r\n        }\r\n    }\r\n\r\n    const handleHidePassword = (password, bool) => {\r\n        if(password === 'oldPassword') {\r\n            setPasswordState({oldPassword: bool})\r\n        } else if(password === 'newPassword') {\r\n            setPasswordState({newPassword: bool})\r\n        } else if(password === 'retypePassword') {\r\n            setPasswordState({retypePassword: bool})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"main-body\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                    {loginAccount[0] && \r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                <img src={loginAccount[0].thumbnail_url || defaultProfPic} alt=\"Profile Pic\" className=\"rounded-circle p-1 bg-primary\" width=\"110\"/>\r\n                                    <div className=\"mt-3\">\r\n                                        <h4>{loginAccount[0] ? loginAccount[0].first_name + \" \" +loginAccount[0].last_name : null}</h4>\r\n                                        <p className=\"text-secondary mb-1\">{loginAccount[0] ? loginAccount[0].role : null}</p>\r\n                                    </div>\r\n                                </div>\r\n                                {/* <hr className=\"my-4\" />\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\r\n                                        <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-globe me-2 icon-inline\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path></svg>Website</h6>\r\n                                        <span className=\"text-secondary\">https://bootdey.com</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\r\n                                        <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-github me-2 icon-inline\"><path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path></svg>Github</h6>\r\n                                        <span className=\"text-secondary\">bootdey</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\r\n                                        <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-twitter me-2 icon-inline text-info\"><path d=\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"></path></svg>Twitter</h6>\r\n                                        <span className=\"text-secondary\">@bootdey</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\r\n                                        <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-instagram me-2 icon-inline text-danger\"><rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"5\" ry=\"5\"></rect><path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path><line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\"></line></svg>Instagram</h6>\r\n                                        <span className=\"text-secondary\">bootdey</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\r\n                                        <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-facebook me-2 icon-inline text-primary\"><path d=\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\"></path></svg>Facebook</h6>\r\n                                        <span className=\"text-secondary\">bootdey</span>\r\n                                    </li>\r\n                                </ul> */}\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                    <div className=\"col-lg-8 user-info-details\">\r\n                        <div className=\"card\">\r\n                        {loginAccount[0] && \r\n                            <div className=\"card-body\">\r\n                                <div className=\"row mb-3\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <h6 className=\"mb-0\">{loginAccount[0].role === 'admin' ? 'ID Number' : 'Client Number'}</h6>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9 text-secondary\">\r\n                                        <input type=\"text\" className=\"form-control\" value={loginAccount[0].id || loginAccount[0].account_no} readOnly/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mb-3\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <h6 className=\"mb-0\">First Name</h6>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9 text-secondary\">\r\n                                        <input type=\"text\" className=\"form-control\" value={loginAccount[0].first_name} readOnly/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mb-3\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <h6 className=\"mb-0\">Last Name</h6>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9 text-secondary\">\r\n                                        <input type=\"text\" className=\"form-control\" value={loginAccount[0].last_name} readOnly/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mb-3\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <h6 className=\"mb-0\">Email</h6>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9 text-secondary\">\r\n                                        <input type=\"text\" className=\"form-control\" value={loginAccount[0].email} readOnly/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mb-3\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <h6 className=\"mb-0\">Mobile</h6>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9 text-secondary\">\r\n                                        <input type=\"text\" className=\"form-control\" value={loginAccount[0].mobile_no} readOnly/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-3\"></div>\r\n                                    <div className=\"col-sm-9 text-secondary\">\r\n                                        <input type=\"button\" className=\"btn btn-primary px-4\" value=\"Change Password\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"/>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Modal for Change Password */}\r\n                    <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Change Password</h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>         \r\n                            </div>\r\n\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <input type={passwordState.oldPassword? 'text' : 'password'}  className=\"form-control\" id=\"floatingOldPassword\" placeholder=\"Old Password\" onChange={(e) => setOldPassword(e.target.value)} value={oldPassword} />\r\n                                    <label>Old Password</label>\r\n                                    <button className=\"btn btn-primary show-hide-password-btn\" onMouseDown={() => handleShowPassword('oldPassword', true)} onMouseUp={() => handleHidePassword('oldPassword', false)}>{passwordState.oldPassword? 'Hide old password' : 'Show old password'}</button>\r\n                                </div>  \r\n                                <div className=\"form-floating mb-3\">\r\n                                    <input type={passwordState.newPassword? 'text' : 'password'} className=\"form-control\" id=\"floatingNewPassword\" placeholder=\"New Password\" onChange={(e) => setNewPassword(e.target.value)} value={newPassword}/>\r\n                                    <button className=\"btn btn-primary show-hide-password-btn\" onMouseDown={() => handleShowPassword('newPassword', true)} onMouseUp={() => handleHidePassword('newPassword', false)}>{passwordState.newPassword? 'Hide old password' : 'Show old password'}</button>\r\n                                    <label>New Password</label>\r\n                                </div> \r\n                                <div className=\"form-floating mb-3\">\r\n                                    <input type={passwordState.retypePassword? 'text' : 'password'} className=\"form-control\" id=\"floatingRetypePassword\" placeholder=\"Retype Password\" onChange={(e) =>setRetypePassword(e.target.value)} value={retypePassword}/>\r\n                                    <button className=\"btn btn-primary show-hide-password-btn\" onMouseDown={() => handleShowPassword('retypePassword', true)} onMouseUp={() => handleHidePassword('retypePassword', false)}>{passwordState.retypePassword? 'Hide old password' : 'Show old password'}</button>\r\n                                    <label>Retype Password</label>\r\n                                </div> \r\n                            </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss={'modal'} data-bs-toggle={\"modal\"} data-bs-target={\"#ModalForgotPassword\"} onClick={() => handleSaveNewPassword()}>Save</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import { useState, useContext } from 'react'\r\nimport {AppContext} from '../Global/AppContext'\r\nimport useLocalStorage from './useLocalStorage'\r\nimport {convertToMoney} from '../lib/helpers'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useHooks = () => {    \r\n    const {withdrawalHistories,\r\n        depositHistories,\r\n        transfersHistories,\r\n        setWithdrawalHistories,\r\n        setDepositHistories,\r\n        setTransfersHistories} = useContext(AppContext)\r\n\r\n    const [currentSelectedData, setCurrentSelectedData] = useState({});\r\n    const [users, setUsers] = useLocalStorage('usersData', [])\r\n    const [loadDummyData, setLoadDummyData] = useLocalStorage('dummyAccounts', false)\r\n    const [accountNo, setAccountNo] = useState('')\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [retypePassword, setRetypePassword] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [mobileNo, setMobileNo] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [balance, setBalance] = useState('');\r\n    const [amountToWithdraw, setAmountToWithdraw] = useState('')\r\n    const [amountToDeposit, setAmountToDeposit] = useState('')\r\n    const [transferTo, setTransferTo] = useState('')    \r\n    const [amountToTransfer, setAmountToTransfer] = useState('')\r\n    const [show, setShow] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);  \r\n    const [searchTerm, setSearchTerm] = useState('');  \r\n    const [searchResults, setSearchResults] = useState([]); \r\n    const [delAccount, setDelAccount] = useState('')   \r\n    const [modalDetailsAlert, setModalDetailsAlert] = useState({\r\n        insufficientBalance: false,\r\n        successful: false,\r\n        enterAnAmountToWithdraw: false,\r\n        successfulDeposit: false,\r\n        enterAnAmountToDeposit: false,\r\n        insufficientBalanceTransfer: false,\r\n        successfulTransfer: false,\r\n        enterAnAmountToTransfer: false,\r\n        sameAccountNumber: false,\r\n        accountNumberNotValidTransfer: false,\r\n        accountNumberCannotBeBlank: false,\r\n        amountEnteredIsNegative: false,\r\n        amountEnteredIsNegativeWithdraw: false,\r\n        amountEnteredIsNegativeDeposit: false\r\n    });\r\n\r\n    const [isOrdered, setIsOrdered] = useState({\r\n        accountNumber: false,\r\n        fullName: false,        \r\n        address: false,\r\n        mobileNo: false,\r\n        email: false,\r\n        balance: false,\r\n    })  \r\n\r\n    const [errorState, setErrorState] = useState({\r\n        username: false,\r\n        password: false,\r\n        retypePassword: false,\r\n        firstName: false,\r\n        lastName: false,\r\n        address: false,\r\n        mobileNo: false,\r\n        email: false,\r\n        usernameAlreadyExists: false,\r\n        passwordsDoNotMatch: false,\r\n        firstNameCantStartWithNumber: false,\r\n        lastNameCantStartWithNumber: false,\r\n        usernameCantContainSpace: false,\r\n        invalidEmailFormat: false\r\n    })       \r\n\r\n    // For Generating User Account Number\r\n    const handleGenerateAccountNo = () => {\r\n        let date = new Date();\r\n        let minutes = '0' + date.getMinutes().toString().substr(-2)\r\n        let hours = '0' + date.getHours().toString().substr(-2)\r\n        let month = '0' + (date.getMonth() + 1).toString().substr(-2)\r\n        let year = date.getFullYear().toString().substr(-2)\r\n        setAccountNo(year + month + hours + minutes + Math.floor(10 + Math.random() * 90))\r\n        setModalShow(true)\r\n    }\r\n\r\n\r\n    // Add user Close Modal - State Reset \r\n    const closeModalComponent = () => {\r\n        setModalShow(false)\r\n        setErrorState({\r\n            username: false,\r\n            password: false,\r\n            retypePassword: false,\r\n            firstName: false,\r\n            lastName: false,\r\n            address: false,\r\n            mobileNo: false,\r\n            email: false,\r\n            usernameAlreadyExists: false,\r\n            passwordsDoNotMatch: false,\r\n            firstNameCantStartWithNumber: false,\r\n            lastNameCantStartWithNumber: false,\r\n            usernameCantContainSpace: false,\r\n            invalidEmailFormat: false                        \r\n        })\r\n    }\r\n\r\n    // Add user validations\r\n    const validation = (newUser) => {\r\n        if(users.find((user) => {return user.username === userName})) {            \r\n            setErrorState({usernameAlreadyExists: true})\r\n       }\r\n       else if (password !== retypePassword) {            \r\n            setErrorState({passwordsDoNotMatch: true})\r\n       } \r\n       else if (!userName) {\r\n            setErrorState({username: true})            \r\n       }\r\n       else if (!password) {\r\n        setErrorState({password: true})\r\n       }\r\n       else if (!retypePassword) {\r\n        setErrorState({retypePassword: true})\r\n       }\r\n       else if (!firstName) {\r\n        setErrorState({firstName: true})\r\n       }\r\n       else if (!lastName) {\r\n        setErrorState({lastName: true})\r\n       }\r\n       else if (!address) {\r\n        setErrorState({address: true})\r\n       }\r\n       else if (!mobileNo) {\r\n        setErrorState({ mobileNo: true})\r\n       }\r\n       else if (!email) {\r\n        setErrorState({email: true})\r\n       }\r\n        else if (userName) {\r\n            setErrorState({username: false})\r\n              if(!userName.includes(\" \")){                    \r\n                 if (password) {\r\n                    setErrorState({password: false})\r\n                    if (retypePassword) {\r\n                        setErrorState({retypePassword: false})\r\n                        if (firstName) {\r\n                            setErrorState({firstName: false})\r\n                            if(isNaN(firstName.substring(0, 1))) {\r\n                                if (lastName) {\r\n                                    setErrorState({lastName: false})\r\n                                    if(isNaN(lastName.substring(0, 1))){\r\n                                        if (address) {\r\n                                            setErrorState({address: false})\r\n                                            if (mobileNo) {\r\n                                                setErrorState({mobileNo: false})\r\n                                                if (email) {\r\n                                                    setErrorState({email: false})\r\n                                                        if(email.includes(\"@\" && \".com\")){\r\n                                                    setUsers([...users, newUser])\r\n                                                    setAccountNo('')\r\n                                                    setUserName('')\r\n                                                    setPassword('')\r\n                                                    setRetypePassword('')\r\n                                                    setFirstName('')\r\n                                                    setLastName('')\r\n                                                    setAddress('')\r\n                                                    setMobileNo('')\r\n                                                    setEmail('')\r\n                                                    setBalance(0)\r\n                                                    setAmountToWithdraw(0)\r\n                                                    setAmountToTransfer(0)\r\n                                                    setAmountToDeposit(0)\r\n                                                    setTransferTo('')\r\n                                                    setModalShow(false)                                                \r\n                                                    toastNotify(\"success\", `Account Created for ${firstName}!`, \"top-center\", \"colored\")    \r\n                                                    } else {\r\n                                                        setErrorState({invalidEmailFormat: true})\r\n                                                    }                                                   \r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    else {                                        \r\n                                        setErrorState({lastNameCantStartWithNumber: true})\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {                                \r\n                                setErrorState({firstNameCantStartWithNumber: true})\r\n                            }\r\n                        }\r\n                    }\r\n               }\r\n        }\r\n        else {            \r\n            setErrorState({usernameCantContainSpace: true})\r\n        } \r\n    }\r\n}\r\n    // Modal Component Reset state\r\n    const resetUserInput = () => {\r\n        setAccountNo(\"\");\r\n        setUserName(\"\");\r\n        setPassword(\"\");\r\n        setRetypePassword(\"\");\r\n        setFirstName(\"\");\r\n        setLastName(\"\");\r\n        setAddress(\"\");\r\n        setMobileNo(\"\");\r\n        setEmail(\"\");\r\n    }   \r\n\r\n    // Adding user Account\r\n    const handleSaveUsers = (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let enPassword = Buffer.from(password).toString('base64');\r\n            let lowerCasedUserName= userName.toLowerCase()\r\n            const newUser = {\r\n                account_no: accountNo,\r\n                username: lowerCasedUserName, \r\n                password: enPassword,\r\n                first_name: firstName,\r\n                last_name: lastName,\r\n                address: address,\r\n                mobile_no: mobileNo,\r\n                email: email,\r\n                balance: balance,\r\n                role: 'client' ,\r\n                thumbnail_url: '',\r\n                latestWithdrawnAmount: amountToWithdraw,\r\n                latestDepositAmount: amountToDeposit,\r\n                latestTransferAmount: amountToTransfer,\r\n                latestTransferTo: transferTo,\r\n            }\r\n            validation(newUser);\r\n       \r\n        } catch(e) {\r\n            console.log(`Error in handleSaveUsers`, e)\r\n        }\r\n    }\r\n\r\n    // Deleting User Account\r\n    const handleDeleteUser = (id) => {\r\n        const index = users.findIndex(user => {return user.account_no === id})\r\n        users.splice(index, 1)\r\n        setUsers([...users])\r\n        checkDummyData(users)\r\n    }\r\n\r\n    // Checking if dummy exist - (Load Data button)\r\n    const checkDummyData = (users) => {\r\n        const userAccounts = users.map(user=>user.account_no)\r\n        const dummyAccounts = [\"22902201921\", \"22902201922\", \"22902201923\", \"22902201924\", \"22902201925\", \"22902201926\", \"22902201927\", \"22902201928\", \"22902201929\", \"22902201930\"]\r\n        if(!dummyAccounts.some(val=>userAccounts.includes(val))){\r\n            setLoadDummyData(false)                     \r\n        }        \r\n   }   \r\n   \r\n    //  Deleting dummy accounts (Delete Data Button)\r\n   const deleteDummyAccounts = ()=> {                 \r\n        if(loadDummyData){           \r\n        toastNotify(\"warn\", `Deleted Test Data`, \"top-right\", \"colored\")\r\n        const dummyAccounts = [\"22902201921\", \"22902201922\", \"22902201923\", \"22902201924\", \"22902201925\", \"22902201926\", \"22902201927\", \"22902201928\", \"22902201929\", \"22902201930\"]\r\n        const newUsers = users.filter(user=>user =! dummyAccounts.includes(user.account_no))         \r\n        setUsers([...newUsers])   \r\n        } \r\n        setLoadDummyData(false)    \r\n   }\r\n\r\n    // Functions for Histories\r\n    const handleHistories = (action) => {\r\n        const newHistory = {\r\n            account_no: currentSelectedData.account_no,\r\n            username: currentSelectedData.username, \r\n            first_name: currentSelectedData.first_name,\r\n            last_name: currentSelectedData.last_name,\r\n            address: currentSelectedData.address,\r\n            mobile_no: currentSelectedData.mobile_no,\r\n            email: currentSelectedData.email,\r\n            balance: currentSelectedData.balance,\r\n            latestWithdrawnAmount: currentSelectedData.latestWithdrawnAmount,\r\n            latestDepositAmount: currentSelectedData.latestDepositAmount,\r\n            latestTransferAmount: currentSelectedData.latestTransferAmount,\r\n            latestTransferTo: currentSelectedData.latestTransferTo,\r\n            currentDatenTime: new Date().toLocaleTimeString([], {year: 'numeric', month: 'numeric', day: 'numeric', hour: '2-digit', minute: '2-digit'})\r\n        }\r\n        if(action === 'withdraw') {\r\n            setWithdrawalHistories([...withdrawalHistories, newHistory])\r\n        }\r\n        else if (action === 'deposit') {\r\n            setDepositHistories([...depositHistories, newHistory])\r\n        } else if (action === 'transfer') {\r\n            setTransfersHistories([...transfersHistories, newHistory])\r\n        }\r\n    }\r\n\r\n    // Withdraw Function \r\n    const handleWithdraw = () => {\r\n        if(amountToWithdraw < 0){\r\n            setModalDetailsAlert({amountEnteredIsNegativeWithdraw: true,})                        \r\n        }\r\n        else if(amountToWithdraw > 0) {                        \r\n                if(amountToWithdraw <= currentSelectedData.balance) {\r\n                     let currentBalance = currentSelectedData.balance - amountToWithdraw;\r\n                     setUsers([...users], currentSelectedData.balance = currentBalance, currentSelectedData.latestWithdrawnAmount = amountToWithdraw)\r\n                     handleHistories('withdraw');                                                                                    \r\n                        toastNotify(\"success\", `Successfully Withdrawn ${convertToMoney(amountToWithdraw)} from ${currentSelectedData.account_no}`, \"top-right\", \"colored\")                                      \r\n                        setShow(false)\r\n                        resetTransaction() \r\n                } else {\r\n                 setModalDetailsAlert({insufficientBalance: true})\r\n                } \r\n            }\r\n         else {            \r\n            setModalDetailsAlert({enterAnAmountToWithdraw: true})\r\n        }\r\n    }\r\n\r\n    // Depositing Account\r\n    const handleDeposit = () => {\r\n        if(amountToDeposit < 0){\r\n            setModalDetailsAlert({amountEnteredIsNegativeDeposit: true,})\r\n        }\r\n        else if(amountToDeposit > 0) {\r\n            let currentBalance = (+currentSelectedData.balance) + (+amountToDeposit);\r\n            setUsers([...users], currentSelectedData.balance = currentBalance, currentSelectedData.latestDepositAmount = amountToDeposit)\r\n            handleHistories('deposit');            \r\n                toastNotify(\"success\", `Successfully Deposited ${convertToMoney(amountToDeposit)} to ${currentSelectedData.account_no}`, \"top-right\", \"colored\")                                      \r\n                resetTransaction()\r\n                setShow(false)            \r\n        } else {\r\n            setModalDetailsAlert({enterAnAmountToDeposit: true})\r\n        }\r\n    }\r\n\r\n    \r\n    // Transferring money from user to another\r\n    const handleTransfer = () => {\r\n        if(transferTo){\r\n            const toUser = users.find(user => {return user.account_no === transferTo})                    \r\n            if(toUser) {\r\n                if(toUser.account_no !== currentSelectedData.account_no) {\r\n                    if(amountToTransfer < 0) {\r\n                        setModalDetailsAlert({amountEnteredIsNegative: true})\r\n                    } else {\r\n                        if(amountToTransfer > 0) {\r\n                            if(amountToTransfer <= currentSelectedData.balance) {\r\n                                let currentBalance = (+currentSelectedData.balance) - (+amountToTransfer)\r\n                                let toUserCurrentBalance = (+toUser.balance) + (+amountToTransfer);\r\n                                setUsers([...users], \r\n                                    currentSelectedData.balance = currentBalance, \r\n                                    currentSelectedData.latestTransferAmount = amountToTransfer, \r\n                                    currentSelectedData.latestTransferTo = transferTo,\r\n                                    toUser.balance = toUserCurrentBalance)\r\n                                handleHistories('transfer');                                \r\n                                    toastNotify(\"success\",`Successfully Transferred ${convertToMoney(amountToTransfer)} from ${currentSelectedData.account_no} to ${transferTo}`, \"top-right\", \"colored\")                                      \r\n                                    setShow(false) \r\n                                    resetTransaction()\r\n                            } else {\r\n                                setModalDetailsAlert({insufficientBalanceTransfer: true})\r\n                            }\r\n                        } else {\r\n                            setModalDetailsAlert({amountToTransfer: true})\r\n                        }\r\n                    }\r\n                } else {\r\n                    setModalDetailsAlert({sameAccountNumber: true})\r\n                }\r\n            } else {\r\n                setModalDetailsAlert({accountNumberNotValidTransfer: true})\r\n            }\r\n        } else {\r\n            setModalDetailsAlert({accountNumberCannotBeBlank: true})\r\n        }\r\n    }\r\n\r\n    // Reset Transaction when click (close button - user modal details)\r\n    const resetTransaction = () => {\r\n        setAmountToWithdraw('')\r\n        setAmountToDeposit('')\r\n        setAmountToTransfer('')\r\n        setTransferTo('')        \r\n        setModalDetailsAlert({\r\n            insufficientBalance: false,\r\n            successful: false,\r\n            enterAnAmountToWithdraw: false,\r\n            successfulDeposit: false,\r\n            enterAnAmountToDeposit: false,\r\n            insufficientBalanceTransfer: false,\r\n            successfulTransfer: false,\r\n            enterAnAmountToTransfer: false,\r\n            sameAccountNumber: false,\r\n            accountNumberNotValidTransfer: false,\r\n            accountNumberCannotBeBlank: false,\r\n            amountEnteredIsNegative: false,\r\n            amountEnteredIsNegativeWithdraw: false,\r\n        });\r\n    }\r\n\r\n    // Adding 10 users on one click\r\n    const insertUserData = (e) => {             \r\n            if(!loadDummyData){           \r\n            toastNotify(\"success\", \"Successfully Loaded Test Data\", \"top-right\", \"colored\")    \r\n            setUsers([...users, {\r\n                account_no: \"22902201921\",\r\n                username: \"Bryan\", \r\n                password: \"QnJ5YW4=\",\r\n                first_name: \"Bryan\",\r\n                last_name: \"L\",\r\n                address: \"Boardwalk\",\r\n                mobile_no: 921985641,\r\n                email: \"Bryan@email.com\",\r\n                balance: 2000000,\r\n                role: 'client' ,\r\n                thumbnail_url: '',\r\n                latestWithdrawnAmount: amountToWithdraw,\r\n                latestDepositAmount: amountToDeposit,\r\n                latestTransferAmount: amountToTransfer,\r\n                latestTransferTo: transferTo,\r\n            },\r\n            {\r\n                account_no: \"22902201922\",\r\n                username: \"Greg\", \r\n                password: \"R3JlZw==\",\r\n                first_name: \"Greg\",\r\n                last_name: \"L\",\r\n                address: \"Park Place\",\r\n                mobile_no: 952314785,\r\n                email: \"Greg@email.com\",\r\n                balance: 575000,\r\n                role: 'client' ,\r\n                thumbnail_url: '',\r\n                latestWithdrawnAmount: amountToWithdraw,\r\n                latestDepositAmount: amountToDeposit,\r\n                latestTransferAmount: amountToTransfer,\r\n                latestTransferTo: transferTo,\r\n            },\r\n            {\r\n                account_no: \"22902201923\",\r\n                username: \"Martney\", \r\n                password: \"TWFydG5leQ==\",\r\n                first_name: \"Martney\",\r\n                last_name: \"A\",\r\n                address: \"Pennsylvania Avenue\",\r\n                mobile_no: 996214756,\r\n                email: \"Martney@email.com\",\r\n                balance: 600000,\r\n                role: 'client' ,\r\n                thumbnail_url: '',\r\n                latestWithdrawnAmount: amountToWithdraw,\r\n                latestDepositAmount: amountToDeposit,\r\n                latestTransferAmount: amountToTransfer,\r\n                latestTransferTo: transferTo,   \r\n            },\r\n            {\r\n                account_no: \"22902201924\",\r\n                username: \"Lebron\", \r\n                password: \"TGVicm9u\",\r\n                first_name: \"Lebron\",\r\n                last_name: \"J\",\r\n                address: \"North Carolina Avenue\",\r\n                mobile_no: 965987412,\r\n                email: \"Lebron@email.com\",\r\n                balance: 1650000,\r\n                role: 'client' ,\r\n                thumbnail_url: '',\r\n                latestWithdrawnAmount: amountToWithdraw,\r\n                latestDepositAmount: amountToDeposit,\r\n                latestTransferAmount: amountToTransfer,\r\n                latestTransferTo: transferTo,\r\n            },\r\n            {\r\n                account_no: \"22902201925\",\r\n                username: \"Adrian\", \r\n                password: \"QWRyaWFu\",\r\n                first_name: \"Adrian\",\r\n                last_name: \"C\",\r\n                address: \"Pacific Avenue\",\r\n                mobile_no: 975632145,\r\n                email: \"Adrian@email.com\",\r\n                balance: 700000,\r\n                role: 'client' ,\r\n                thumbnail_url: '',\r\n                latestWithdrawnAmount: amountToWithdraw,\r\n                latestDepositAmount: amountToDeposit,\r\n                latestTransferAmount: amountToTransfer,\r\n                latestTransferTo: transferTo,\r\n            },\r\n            {\r\n                account_no: \"22902201926\",\r\n                username: \"John\", \r\n                password: \"Sm9obg==\",\r\n                first_name: \"John\",\r\n                last_name: \"Y\",\r\n                address: \"Marvin Gardens\",\r\n                mobile_no: 932564782,\r\n                email: \"John@email.com\",\r\n                balance: 750000,\r\n                role: 'client' ,\r\n                thumbnail_url: '',\r\n                latestWithdrawnAmount: amountToWithdraw,\r\n                latestDepositAmount: amountToDeposit,\r\n                latestTransferAmount: amountToTransfer,\r\n                latestTransferTo: transferTo,\r\n            },\r\n            {\r\n                account_no: \"22902201927\",\r\n                username: \"Victor\", \r\n                password: \"VmljdG9y\",\r\n                first_name: \"Victor\",\r\n                last_name: \"R\",\r\n                address: \"Ventnor Avenue\",\r\n                mobile_no: 945632187,\r\n                email: \"Victor@email.com\",\r\n                balance: 800000,\r\n                role: 'client' ,\r\n                thumbnail_url: '',\r\n                latestWithdrawnAmount: amountToWithdraw,\r\n                latestDepositAmount: amountToDeposit,\r\n                latestTransferAmount: amountToTransfer,\r\n                latestTransferTo: transferTo,\r\n            },\r\n            {\r\n                account_no: \"22902201928\",\r\n                username: \"Jerick\", \r\n                password: \"SmVyaWNr\",\r\n                first_name: \"Jerick\",\r\n                last_name: \"B\",\r\n                address: \"Atlantic Avenue\",\r\n                mobile_no: 986325412,\r\n                email: \"Jerick@email.com\",\r\n                balance: 900000,\r\n                role: 'client' ,\r\n                thumbnail_url: '',\r\n                latestWithdrawnAmount: amountToWithdraw,\r\n                latestDepositAmount: amountToDeposit,\r\n                latestTransferAmount: amountToTransfer,\r\n                latestTransferTo: transferTo,\r\n            },\r\n            {\r\n                account_no: \"22902201929\",\r\n                username: \"Stephen\", \r\n                password: \"SXNpYWg=\",\r\n                first_name: \"Isiah\",\r\n                last_name: \"C\",\r\n                address: \"Indiana Avenue\",\r\n                mobile_no: 916543874,\r\n                email: \"Isiah@email.com\",\r\n                balance: 1200000,\r\n                role: 'client' ,\r\n                thumbnail_url: '',\r\n                latestWithdrawnAmount: amountToWithdraw,\r\n                latestDepositAmount: amountToDeposit,\r\n                latestTransferAmount: amountToTransfer,\r\n                latestTransferTo: transferTo,\r\n            },\r\n            {\r\n                account_no: \"22902201930\",\r\n                username: \"Carla\", \r\n                password: \"Q2FybGE=\",\r\n                first_name: \"Carla\",\r\n                last_name: \"M\",\r\n                address: \"Kentucky Avenue\",\r\n                mobile_no: 932564128,\r\n                email: \"Carla@email.com\",\r\n                balance: 1100000,\r\n                role: 'client' ,\r\n                thumbnail_url: '',\r\n                latestWithdrawnAmount: amountToWithdraw,\r\n                latestDepositAmount: amountToDeposit,\r\n                latestTransferAmount: amountToTransfer,\r\n                latestTransferTo: transferTo,\r\n            }\r\n            ])\r\n            setLoadDummyData(true)\r\n        } else {\r\n            e.preventDefault()\r\n        }   \r\n    }\r\n\r\n    // For querying user accounts\r\n    const searchHandler = (e) => {\r\n        setSearchTerm(e.target.value)\r\n        if(searchTerm !== '') {\r\n            const newUserList = users.filter((user) => {\r\n               return Object.values(user)\r\n                .join(\" \")\r\n                .toLowerCase()\r\n                .includes(searchTerm.toLowerCase())\r\n            });\r\n            setSearchResults(newUserList)\r\n        }\r\n        else {\r\n            setSearchResults(users)\r\n        }\r\n    }\r\n    \r\n    // Sorting function section\r\n    const sortByAccountNumber = () => {\r\n        setIsOrdered({...isOrdered,\r\n            accountNumber: !isOrdered.accountNumber,\r\n            // firstName: false,\r\n            // lastName: false,\r\n            // address: false,\r\n            // mobileNo: false,\r\n            // email: false  \r\n        })        \r\n        users.sort((a, b)=>{\r\n        return (isOrdered.accountNumber ? a.account_no - b.account_no : b.account_no - a.account_no)\r\n        })\r\n        setUsers([...users])      \r\n        toastNotify(\"success\", \"Sorted By Account Number\", \"top-right\")            \r\n    } \r\n\r\n    \r\n    const sortByFullName = () => {  \r\n        setIsOrdered({...isOrdered,\r\n            fullName: !isOrdered.fullName,\r\n            // accountNumber: false,    \r\n            // lastName: false,\r\n            // address: false,\r\n            // mobileNo: false,\r\n            // email: false  \r\n        })                \r\n            users.sort((a, b)=>{              \r\n            let nameA = a.first_name.toUpperCase() + \" \" + a.last_name.toUpperCase();\r\n            let nameB = b.first_name.toUpperCase() + \" \" + b.last_name.toUpperCase();                    \r\n            if (nameA > nameB) {\r\n                return (isOrdered.fullName ? 1: -1)\r\n              }\r\n            if (nameA < nameB) {\r\n                return (isOrdered.fullName ? -1: 1)\r\n              }\r\n              return 0        \r\n          });            \r\n            setUsers([...users])    \r\n            toastNotify(\"success\", \"Sorted By Full Name\", \"top-right\")  \r\n    }    \r\n\r\n    const sortByAddress = () => {\r\n        setIsOrdered({...isOrdered,\r\n            address: !isOrdered.address,\r\n            // lastName: false\r\n            // firstName: false\r\n            // accountNumber: false,    \r\n            // mobileNo: false,\r\n            // email: false  \r\n        })                 \r\n        users.sort((a, b)=>{              \r\n        let nameA = a.address.toUpperCase();\r\n        let nameB = b.address.toUpperCase();                    \r\n        if (nameA > nameB) {\r\n            return (!isOrdered.address ? 1: -1)\r\n          }\r\n        if (nameA < nameB) {\r\n            return (!isOrdered.address ? -1: 1)\r\n          } \r\n          return 0          \r\n      });            \r\n        setUsers([...users])\r\n        toastNotify(\"success\", \"Sorted By Address\", \"top-right\")\r\n    }\r\n\r\n    const sortByMobileNo = () => {\r\n        setIsOrdered({...isOrdered,\r\n            mobileNo: !isOrdered.mobileNo,\r\n            // address: false\r\n            // lastName: false\r\n            // firstName: false\r\n            // accountNumber: false,       \r\n            // email: false  \r\n        })        \r\n        users.sort((a, b)=>{\r\n        return (isOrdered.mobileNo ? a.mobile_no - b.mobile_no : b.mobile_no - a.mobile_no)\r\n        })\r\n        setUsers([...users])     \r\n        toastNotify(\"success\", \"Sorted By Phone Number\", \"top-right\")           \r\n    } \r\n\r\n    const sortByEmail = () => {\r\n        setIsOrdered({...isOrdered,\r\n            email: !isOrdered.email  \r\n            // mobileNo: false\r\n            // address: false\r\n            // lastName: false\r\n            // firstName: false\r\n            // accountNumber: false,           \r\n        })                  \r\n        users.sort((a, b)=>{              \r\n        let emailA = a.email.toUpperCase();\r\n        let emailB = b.email.toUpperCase();                    \r\n        if (emailA > emailB) {\r\n            return (isOrdered.email ? 1: -1)\r\n          }\r\n        if (emailA < emailB) {\r\n            return (isOrdered.email ? -1: 1)\r\n          } \r\n          return 0          \r\n      });            \r\n        setUsers([...users])\r\n        toastNotify(\"success\", \"Sorted By Email\", \"top-right\")\r\n    }\r\n\r\n    const sortByCurrentBalance = () => {\r\n        setIsOrdered({...isOrdered,\r\n            balance: !isOrdered.balance,           \r\n        })        \r\n        users.sort((a, b)=>{\r\n        return (isOrdered.balance ? a.balance - b.balance : b.balance - a.balance)\r\n        })\r\n        setUsers([...users])      \r\n        toastNotify(\"success\", \"Sorted By Current Balance\", \"top-right\")\r\n    }   \r\n    \r\n    const toastNotify = (type, str, position, colored=null) => {\r\n            if(type===\"success\"){\r\n            toast.success(str, {\r\n            position: position,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: colored            \r\n            }); \r\n        } else if (type===\"warn\"){\r\n            toast.warning(str, {\r\n                position: position,\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined, \r\n                theme: colored\r\n                }); \r\n        } \r\n    }\r\n    \r\n    return {\r\n        currentSelectedData,\r\n        setCurrentSelectedData, \r\n        users, \r\n        setUsers, \r\n        accountNo, \r\n        setAccountNo, \r\n        userName, \r\n        setUserName, \r\n        password, \r\n        setPassword, \r\n        retypePassword, \r\n        setRetypePassword, \r\n        firstName, \r\n        setFirstName, \r\n        lastName, \r\n        setLastName, \r\n        address, \r\n        setAddress, \r\n        mobileNo, \r\n        setMobileNo, \r\n        email, \r\n        setEmail, \r\n        balance, \r\n        setBalance, \r\n        amountToWithdraw, \r\n        setAmountToWithdraw, \r\n        amountToDeposit, \r\n        setAmountToDeposit, \r\n        transferTo, \r\n        setTransferTo,        \r\n        amountToTransfer, \r\n        setAmountToTransfer,\r\n        handleGenerateAccountNo,\r\n        handleSaveUsers,\r\n        handleDeleteUser,\r\n        handleWithdraw,\r\n        handleDeposit,\r\n        handleTransfer,\r\n        errorState,\r\n        setErrorState,\r\n        convertToMoney,\r\n        modalDetailsAlert,\r\n        resetTransaction,\r\n        setModalShow,\r\n        modalShow,\r\n        closeModalComponent,\r\n        resetUserInput,\r\n        insertUserData,        \r\n        loadDummyData,\r\n        searchTerm,\r\n        setSearchTerm,\r\n        searchResults,\r\n        setSearchResults,\r\n        searchHandler,\r\n        deleteDummyAccounts,\r\n        sortByAccountNumber,\r\n        sortByFullName,        \r\n        sortByAddress,\r\n        sortByMobileNo,\r\n        sortByEmail,\r\n        sortByCurrentBalance,\r\n        isOrdered, \r\n        show,\r\n        setShow,\r\n        delAccount,\r\n        setDelAccount  \r\n    }\r\n}\r\n\r\nexport default useHooks\r\n","import {useState} from 'react'\r\nimport useSessionStorage from './useSessionStorage'\r\nimport useLocalStorage from '../Users/useLocalStorage';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\n\r\n\r\nconst useHooks = () => {\r\n\r\n    const [modalShow, setModalShow] = useState(true);\r\n    const matchesMD = useMediaQuery('(min-width: 768px)')\r\n    const [usernameInput, setUsernameInput] = useState('')\r\n    const [passwordInput, setPasswordInput] = useState('')\r\n    const [selected, setSelected] = useSessionStorage('selectedMenu', '');\r\n    const [isAdmin, setIsAdmin] = useSessionStorage('isAdmin', false);\r\n    const [isUser, setIsUser] = useSessionStorage('isUser', false);\r\n    const [loginAccount, setLoginAccount] = useSessionStorage('loginAccount', []);\r\n    const [admin, setAdmin] = useLocalStorage('adminsData', [])\r\n    const [users, setUsers] = useLocalStorage('usersData', [])\r\n    const historiesSelected = selected === 1 || selected === 2 || selected === 3;\r\n   \r\n    // Automatically create an admin account in localstorage if adminsdata is null\r\n    if(localStorage.getItem('adminsData') == null) {\r\n            const newAdmin = {\r\n                id: 1,\r\n                role: 'admin',\r\n                username: 'admin', \r\n                password: 'MTIzNA==',\r\n                first_name: 'Admin',\r\n                last_name: 'Lastname',\r\n                email: 'admin@gmail.com',\r\n                mobile_no: '0912323123123',\r\n                thumbnail_url: 'https://bootdey.com/img/Content/avatar/avatar6.png'\r\n            }\r\n            setAdmin([...admin, newAdmin])\r\n            setIsAdmin(false)\r\n    }\r\n    // Setting an empty array loginaccount key inside sessionstorage if loginaccount is null\r\n    if (sessionStorage.getItem('loginAccount') == null) {\r\n        setLoginAccount([])\r\n    }\r\n    // Setting a 0 state loginaccount key inside sessionstorage if selectedMenu key in sessionstorage is null\r\n    if(sessionStorage.getItem('selectedMenu') == null) {\r\n        setSelected(0)\r\n    }   \r\n    // Setting a specific user inside selected state\r\n    const handleSelectedMenu = (index) => {\r\n        setSelected(index)\r\n    }\r\n\r\n   \r\n    // for Login, checking a user (admin and client) if they are registered user for accessing the system\r\n    const handleCheckUser = () => {\r\n        const loginFilterAdmin = admin.filter(obj => obj.username === usernameInput)\r\n        const loginFilterUser = users.filter(obj => obj.username === usernameInput)\r\n        if(loginFilterAdmin.length >= 1) {\r\n            let enPassword = Buffer.from(passwordInput).toString('base64');\r\n            const passwordFilter = loginFilterAdmin.filter(obj => obj.password === enPassword)\r\n            if(passwordFilter.length >= 1) {\r\n                setIsAdmin(true)\r\n                setIsUser(false)\r\n                setLoginAccount(loginFilterAdmin)\r\n                setModalShow(false)\r\n                setUsernameInput('')\r\n                setPasswordInput('')\r\n            }\r\n            else {\r\n                alert('Wrong password. Please Try Again.')\r\n            }\r\n        }\r\n        else if(loginFilterUser.length >= 1) {\r\n            let enPassword = Buffer.from(passwordInput).toString('base64');\r\n            const passwordFilter = loginFilterUser.filter(obj => obj.password === enPassword)\r\n            if(passwordFilter.length >= 1) {\r\n                setIsAdmin(false)\r\n                setIsUser(true)\r\n                setLoginAccount(loginFilterUser)\r\n                setModalShow(false)\r\n                setUsernameInput('')\r\n                setPasswordInput('')\r\n            }\r\n            else {\r\n                alert('Wrong password. Please Try Again.')\r\n            }\r\n        }\r\n        else {\r\n            alert('Username not registered!')\r\n        }\r\n    }\r\n\r\n \r\n    const handleLogout = () => {\r\n        setIsAdmin(false)\r\n        setIsUser(false)\r\n        setLoginAccount([])\r\n        setSelected(0)\r\n        setModalShow(true)\r\n    }\r\n\r\n    // for showing and hiding password when loggin in\r\n    const [passwordState, setPasswordState] = useState({\r\n        password: false,\r\n    })\r\n\r\n    const handleShowPassword = (bool) => {\r\n        setPasswordState({password: bool})\r\n    }\r\n\r\n    const handleHidePassword = (bool) => {\r\n        setPasswordState({password: bool})\r\n    }\r\n\r\n    return {\r\n        usernameInput,\r\n        setUsernameInput,\r\n        passwordInput,\r\n        setPasswordInput,\r\n        selected,\r\n        isAdmin,\r\n        setIsAdmin,\r\n        isUser,\r\n        loginAccount,\r\n        setLoginAccount,\r\n        admin,\r\n        setAdmin,\r\n        historiesSelected,\r\n        handleSelectedMenu,\r\n        handleCheckUser,\r\n        handleLogout,\r\n        matchesMD,\r\n        users,\r\n        setUsers,\r\n        passwordState,\r\n        handleShowPassword,\r\n        handleHidePassword,\r\n        setSelected,\r\n        modalShow,\r\n        setModalShow\r\n    }\r\n}\r\n\r\nexport default useHooks\r\n"],"sourceRoot":""}